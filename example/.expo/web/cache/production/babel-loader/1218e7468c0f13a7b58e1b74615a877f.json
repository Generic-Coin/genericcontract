{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import{Select,Fieldset}from\"/Users/joel/Projects/crypto/genericv2/src/index\";import View from\"react-native-web/dist/exports/View\";import ExamplePanel from\"../util/ExamplePanel\";var options=['apple','orange','banana','pear','watermelon'].map(function(o){return{label:o,value:o};});var SelectExample=function SelectExample(){var _useState=useState(options[0].value),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];return React.createElement(ExamplePanel,{variant:\"clear\"},React.createElement(Fieldset,{label:\"Disabled:\",style:[{padding:20}]},React.createElement(Select,{disabled:true,options:options,value:value,onChange:function onChange(newValue){return setValue(newValue);},style:[{width:150}]})),React.createElement(Fieldset,{label:\"Default:\",style:[{padding:20}]},React.createElement(View,{style:{zIndex:999}},React.createElement(Select,{menuMaxHeight:130,options:options,value:value,onChange:function onChange(newValue){return setValue(newValue);},style:[{width:150}]}))));};export default SelectExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/SelectExample.tsx"],"names":["React","useState","Select","Fieldset","ExamplePanel","options","map","o","label","value","SelectExample","setValue","padding","newValue","width","zIndex"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,MAAT,CAAiBC,QAAjB,uD,qDAGA,MAAOC,CAAAA,YAAP,4BAEA,GAAMC,CAAAA,OAAO,CAAG,CAAC,OAAD,CAAU,QAAV,CAAoB,QAApB,CAA8B,MAA9B,CAAsC,YAAtC,EAAoDC,GAApD,CAAwD,SAAAC,CAAC,QAAK,CAC5EC,KAAK,CAAED,CADqE,CAE5EE,KAAK,CAAEF,CAFqE,CAAL,EAAzD,CAAhB,CAKA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,eACAT,QAAQ,CAACI,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAZ,CADR,wCACnBA,KADmB,eACZE,QADY,eAE1B,MACE,qBAAC,YAAD,EAAc,OAAO,CAAC,OAAtB,EACE,oBAAC,QAAD,EAAU,KAAK,CAAC,WAAhB,CAA4B,KAAK,CAAE,CAAC,CAAEC,OAAO,CAAE,EAAX,CAAD,CAAnC,EACE,oBAAC,MAAD,EACE,QAAQ,KADV,CAEE,OAAO,CAAEP,OAFX,CAGE,KAAK,CAAEI,KAHT,CAIE,QAAQ,CAAE,kBAAAI,QAAQ,QAAIF,CAAAA,QAAQ,CAACE,QAAD,CAAZ,EAJpB,CAKE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAT,CAAD,CALT,EADF,CADF,CAUE,oBAAC,QAAD,EAAU,KAAK,CAAC,UAAhB,CAA2B,KAAK,CAAE,CAAC,CAAEF,OAAO,CAAE,EAAX,CAAD,CAAlC,EAEE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEG,MAAM,CAAE,GAAV,CAAb,EACE,oBAAC,MAAD,EACE,aAAa,CAAE,GADjB,CAEE,OAAO,CAAEV,OAFX,CAGE,KAAK,CAAEI,KAHT,CAIE,QAAQ,CAAE,kBAAAI,QAAQ,QAAIF,CAAAA,QAAQ,CAACE,QAAD,CAAZ,EAJpB,CAKE,KAAK,CAAE,CAAC,CAAEC,KAAK,CAAE,GAAT,CAAD,CALT,EADF,CAFF,CAVF,CADF,CAyBD,CA3BD,CA6BA,cAAeJ,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Select, Fieldset } from 'react95-native';\n\nimport { View } from 'react-native';\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst options = ['apple', 'orange', 'banana', 'pear', 'watermelon'].map(o => ({\n  label: o,\n  value: o,\n}));\n\nconst SelectExample = () => {\n  const [value, setValue] = useState(options[0].value);\n  return (\n    <ExamplePanel variant='clear'>\n      <Fieldset label='Disabled:' style={[{ padding: 20 }]}>\n        <Select\n          disabled\n          options={options}\n          value={value}\n          onChange={newValue => setValue(newValue)}\n          style={[{ width: 150 }]}\n        />\n      </Fieldset>\n      <Fieldset label='Default:' style={[{ padding: 20 }]}>\n        {/* TODO: fix select dropdown zIndex issue */}\n        <View style={{ zIndex: 999 }}>\n          <Select\n            menuMaxHeight={130}\n            options={options}\n            value={value}\n            onChange={newValue => setValue(newValue)}\n            style={[{ width: 150 }]}\n          />\n        </View>\n      </Fieldset>\n    </ExamplePanel>\n  );\n};\n\nexport default SelectExample;\n"]},"metadata":{},"sourceType":"module"}