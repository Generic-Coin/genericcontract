{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{UnavailabilityError}from'@unimodules/core';import ExpoHaptics from\"./ExpoHaptics\";import{NotificationFeedbackType,ImpactFeedbackStyle}from\"./Haptics.types\";export function notification(){var type,_args=arguments;return _regeneratorRuntime.async(function notification$(_context){while(1){switch(_context.prev=_context.next){case 0:type=_args.length>0&&_args[0]!==undefined?_args[0]:NotificationFeedbackType.Success;console.warn('`Haptics.notification` is deprecated. Use `Haptics.notificationAsync` instead.');_context.next=4;return _regeneratorRuntime.awrap(notificationAsync(type));case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);}export function impact(){var style,_args2=arguments;return _regeneratorRuntime.async(function impact$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:style=_args2.length>0&&_args2[0]!==undefined?_args2[0]:ImpactFeedbackStyle.Medium;console.warn('`Haptics.impact` is deprecated. Use `Haptics.impactAsync` instead.');_context2.next=4;return _regeneratorRuntime.awrap(impactAsync(style));case 4:case\"end\":return _context2.stop();}}},null,null,null,Promise);}export function selection(){return _regeneratorRuntime.async(function selection$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:console.warn('`Haptics.selection` is deprecated. Use `Haptics.selectionAsync` instead.');_context3.next=3;return _regeneratorRuntime.awrap(selectionAsync());case 3:case\"end\":return _context3.stop();}}},null,null,null,Promise);}export function notificationAsync(){var type,_args4=arguments;return _regeneratorRuntime.async(function notificationAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:type=_args4.length>0&&_args4[0]!==undefined?_args4[0]:NotificationFeedbackType.Success;if(ExpoHaptics.notificationAsync){_context4.next=3;break;}throw new UnavailabilityError('Haptics','notificationAsync');case 3:_context4.next=5;return _regeneratorRuntime.awrap(ExpoHaptics.notificationAsync(type));case 5:case\"end\":return _context4.stop();}}},null,null,null,Promise);}export function impactAsync(){var style,_args5=arguments;return _regeneratorRuntime.async(function impactAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:style=_args5.length>0&&_args5[0]!==undefined?_args5[0]:ImpactFeedbackStyle.Medium;if(ExpoHaptics.impactAsync){_context5.next=3;break;}throw new UnavailabilityError('Haptic','impactAsync');case 3:_context5.next=5;return _regeneratorRuntime.awrap(ExpoHaptics.impactAsync(style));case 5:case\"end\":return _context5.stop();}}},null,null,null,Promise);}export function selectionAsync(){return _regeneratorRuntime.async(function selectionAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(ExpoHaptics.selectionAsync){_context6.next=2;break;}throw new UnavailabilityError('Haptic','selectionAsync');case 2:_context6.next=4;return _regeneratorRuntime.awrap(ExpoHaptics.selectionAsync());case 4:case\"end\":return _context6.stop();}}},null,null,null,Promise);}export{NotificationFeedbackType,ImpactFeedbackStyle};","map":{"version":3,"sources":["../src/Haptics.ts"],"names":[],"mappings":"4DAAA,OAAS,mBAAT,KAAoC,kBAApC,CAEA,MAAO,CAAA,WAAP,qBACA,OAAS,wBAAT,CAAmC,mBAAnC,uBAEA,MAAO,SAAe,CAAA,YAAf,kJACL,IADK,+CAC4B,wBAAwB,CAAC,OADrD,CAGL,OAAO,CAAC,IAAR,CAAa,gFAAb,EAHK,iDAIC,iBAAiB,CAAC,IAAD,CAJlB,uEAOP,MAAO,SAAe,CAAA,MAAf,iJACL,KADK,kDACwB,mBAAmB,CAAC,MAD5C,CAGL,OAAO,CAAC,IAAR,CAAa,oEAAb,EAHK,kDAIC,WAAW,CAAC,KAAD,CAJZ,wEAOP,MAAO,SAAe,CAAA,SAAf,yHACL,OAAO,CAAC,IAAR,CAAa,0EAAb,EADK,kDAEC,cAAc,EAFf,wEAQP,MAAO,SAAe,CAAA,iBAAf,2JACL,IADK,kDAC4B,wBAAwB,CAAC,OADrD,IAGA,WAAW,CAAC,iBAHZ,+BAIG,IAAI,CAAA,mBAAJ,CAAwB,SAAxB,CAAmC,mBAAnC,CAJH,0DAMC,WAAW,CAAC,iBAAZ,CAA8B,IAA9B,CAND,wEAYP,MAAO,SAAe,CAAA,WAAf,sJACL,KADK,kDACwB,mBAAmB,CAAC,MAD5C,IAGA,WAAW,CAAC,WAHZ,+BAIG,IAAI,CAAA,mBAAJ,CAAwB,QAAxB,CAAkC,aAAlC,CAJH,0DAMC,WAAW,CAAC,WAAZ,CAAwB,KAAxB,CAND,wEAYP,MAAO,SAAe,CAAA,cAAf,iIACA,WAAW,CAAC,cADZ,+BAEG,IAAI,CAAA,mBAAJ,CAAwB,QAAxB,CAAkC,gBAAlC,CAFH,0DAIC,WAAW,CAAC,cAAZ,EAJD,wEAOP,OAAS,wBAAT,CAAmC,mBAAnC","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoHaptics from './ExpoHaptics';\nimport { NotificationFeedbackType, ImpactFeedbackStyle } from './Haptics.types';\n\nexport async function notification(\n  type: NotificationFeedbackType = NotificationFeedbackType.Success\n): Promise<void> {\n  console.warn('`Haptics.notification` is deprecated. Use `Haptics.notificationAsync` instead.');\n  await notificationAsync(type);\n}\n\nexport async function impact(\n  style: ImpactFeedbackStyle = ImpactFeedbackStyle.Medium\n): Promise<void> {\n  console.warn('`Haptics.impact` is deprecated. Use `Haptics.impactAsync` instead.');\n  await impactAsync(style);\n}\n\nexport async function selection(): Promise<void> {\n  console.warn('`Haptics.selection` is deprecated. Use `Haptics.selectionAsync` instead.');\n  await selectionAsync();\n}\n\n/**\n * Triggers notification feedback.\n */\nexport async function notificationAsync(\n  type: NotificationFeedbackType = NotificationFeedbackType.Success\n): Promise<void> {\n  if (!ExpoHaptics.notificationAsync) {\n    throw new UnavailabilityError('Haptics', 'notificationAsync');\n  }\n  await ExpoHaptics.notificationAsync(type);\n}\n\n/**\n * Triggers impact feedback.\n */\nexport async function impactAsync(\n  style: ImpactFeedbackStyle = ImpactFeedbackStyle.Medium\n): Promise<void> {\n  if (!ExpoHaptics.impactAsync) {\n    throw new UnavailabilityError('Haptic', 'impactAsync');\n  }\n  await ExpoHaptics.impactAsync(style);\n}\n\n/**\n * Triggers selection feedback.\n */\nexport async function selectionAsync(): Promise<void> {\n  if (!ExpoHaptics.selectionAsync) {\n    throw new UnavailabilityError('Haptic', 'selectionAsync');\n  }\n  await ExpoHaptics.selectionAsync();\n}\n\nexport { NotificationFeedbackType, ImpactFeedbackStyle };\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}