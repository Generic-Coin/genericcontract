{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Snackbar}from\"/Users/joel/Projects/crypto/genericv2/src/index\";var NotificationService=function(){function NotificationService(){var _this=this;_classCallCheck(this,NotificationService);this.send=function(notification){_this.notifications.push(notification);_this.notify();};this.remove=function(notification){_this.notifications=_this.notifications.filter(function(n){return n!==notification;});_this.notify();};this.subscribe=function(callback){_this.subscribers.push(callback);};this.notify=function(){_this.subscribers.forEach(function(callback){return callback(_this.notifications);});};this.unsubscribe=function(callback){_this.subscribers=_this.subscribers.filter(function(cb){return cb!==callback;});};this.notifications=[];this.subscribers=[];}_createClass(NotificationService,[{key:\"messages\",get:function get(){return this.notifications;}}]);return NotificationService;}();export var notificationService=new NotificationService();export var NotificationProvider=function NotificationProvider(){var _React$useState=React.useState(notificationService.messages),_React$useState2=_slicedToArray(_React$useState,2),notifications=_React$useState2[0],setNotifications=_React$useState2[1];React.useEffect(function(){var onNotificationsAdded=function onNotificationsAdded(n){setNotifications(_toConsumableArray(n));};notificationService.subscribe(onNotificationsAdded);return function(){return notificationService.unsubscribe(onNotificationsAdded);};},[]);return React.createElement(View,{style:styles.container,pointerEvents:\"box-none\"},notifications.map(function(notification,i){return React.createElement(Snackbar,{key:i,visible:true,onDismiss:function onDismiss(){return notificationService.remove(notification);},action:{label:notification.closeButtonLabel||'OK',onPress:function onPress(){return notificationService.remove(notification);}},duration:1000},notification.message);}));};var styles=StyleSheet.create({container:{position:'absolute',flex:1,top:0,left:0,right:0,bottom:0}});","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/util/notifications.tsx"],"names":["React","Snackbar","NotificationService","send","notification","notifications","push","notify","remove","filter","n","subscribe","callback","subscribers","forEach","unsubscribe","cb","notificationService","NotificationProvider","useState","messages","setNotifications","useEffect","onNotificationsAdded","styles","container","map","i","label","closeButtonLabel","onPress","message","StyleSheet","create","position","flex","top","left","right","bottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport { Snackbar } from 'react95-native';\n\ntype Notification = {\n  message: string;\n  closeButtonLabel?: string;\n};\n\ntype NotificationCallback = (data: Notification[]) => void;\n\nclass NotificationService {\n  public notifications: Notification[];\n\n  public subscribers: { (data: Notification[]): void }[];\n\n  constructor() {\n    this.notifications = [];\n    this.subscribers = [];\n  }\n\n  get messages() {\n    return this.notifications;\n  }\n\n  send = (notification: Notification) => {\n    this.notifications.push(notification);\n    this.notify();\n  };\n\n  remove = (notification: Notification) => {\n    this.notifications = this.notifications.filter(n => n !== notification);\n    this.notify();\n  };\n\n  subscribe = (callback: NotificationCallback) => {\n    this.subscribers.push(callback);\n  };\n\n  notify = () => {\n    this.subscribers.forEach(callback => callback(this.notifications));\n  };\n\n  unsubscribe = (callback: NotificationCallback) => {\n    this.subscribers = this.subscribers.filter(cb => cb !== callback);\n  };\n}\n\nexport const notificationService = new NotificationService();\n\nexport const NotificationProvider = () => {\n  const [notifications, setNotifications] = React.useState(\n    notificationService.messages,\n  );\n\n  React.useEffect(() => {\n    const onNotificationsAdded = (n: Notification[]) => {\n      setNotifications([...n]);\n    };\n    notificationService.subscribe(onNotificationsAdded);\n\n    return () => notificationService.unsubscribe(onNotificationsAdded);\n  }, []);\n\n  return (\n    <View style={styles.container} pointerEvents='box-none'>\n      {notifications.map((notification, i) => (\n        <Snackbar\n          key={i}\n          visible\n          onDismiss={() => notificationService.remove(notification)}\n          action={{\n            label: notification.closeButtonLabel || 'OK',\n            onPress: () => notificationService.remove(notification),\n          }}\n          duration={1000}\n        >\n          {notification.message}\n        </Snackbar>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    flex: 1,\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}