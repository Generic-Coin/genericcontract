{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState}from'react';import View from\"react-native-web/dist/exports/View\";import{NavigationContainer}from'@react-navigation/native';import{useFonts}from'expo-font';import{StatusBar}from'expo-status-bar';import{fontNames,Provider,themes}from\"/Users/joel/Projects/crypto/genericcoin/src/index\";import*as SplashScreen from'expo-splash-screen';import MainNavigation from\"./MainNavigation\";import{NotificationProvider}from\"./util/notifications\";var App=function App(){var _useFonts3;var _useState=useState(themes.original),_useState2=_slicedToArray(_useState,2),theme=_useState2[0],setTheme=_useState2[1];var _useFonts=useFonts((_useFonts3={},_defineProperty(_useFonts3,fontNames.normal,require(\"./assets/fonts/MS-Sans-Serif.ttf\")),_defineProperty(_useFonts3,fontNames.bold,require(\"./assets/fonts/MS-Sans-Serif-Bold.ttf\")),_useFonts3)),_useFonts2=_slicedToArray(_useFonts,1),fontLoaded=_useFonts2[0];useEffect(function(){if(fontLoaded){SplashScreen.hideAsync();return;}SplashScreen.preventAutoHideAsync();},[fontLoaded]);if(!fontLoaded){return React.createElement(View,null);}return React.createElement(React.Fragment,null,React.createElement(StatusBar,{style:\"light\"}),React.createElement(View,{style:{flex:1,backgroundColor:'#387d80'}},React.createElement(Provider,{theme:theme},React.createElement(NavigationContainer,null,React.createElement(MainNavigation,{setTheme:setTheme})),React.createElement(NotificationProvider,null))));};export default App;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericcoin/example/src/App.tsx"],"names":["React","useEffect","useState","NavigationContainer","useFonts","StatusBar","fontNames","Provider","themes","SplashScreen","MainNavigation","NotificationProvider","App","original","theme","setTheme","normal","require","bold","fontLoaded","hideAsync","preventAutoHideAsync","flex","backgroundColor"],"mappings":"oIACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,C,qDAEA,OAASC,mBAAT,KAAoC,0BAApC,CACA,OAASC,QAAT,KAAyB,WAAzB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CACA,OAASC,SAAT,CAAoBC,QAApB,CAA8BC,MAA9B,yDACA,MAAO,GAAKC,CAAAA,YAAZ,KAA8B,oBAA9B,CAEA,MAAOC,CAAAA,cAAP,wBACA,OAASC,oBAAT,4BAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,8BACUV,QAAQ,CAACM,MAAM,CAACK,QAAR,CADlB,wCACTC,KADS,eACFC,QADE,6BAGKX,QAAQ,2CAC1BE,SAAS,CAACU,MADgB,CACPC,OAAO,oCADA,6BAE1BX,SAAS,CAACY,IAFgB,CAETD,OAAO,yCAFE,cAHb,wCAGTE,UAHS,eAQhBlB,SAAS,CAAC,UAAM,CACd,GAAIkB,UAAJ,CAAgB,CACdV,YAAY,CAACW,SAAb,GACA,OACD,CAEDX,YAAY,CAACY,oBAAb,GACD,CAPQ,CAON,CAACF,UAAD,CAPM,CAAT,CASA,GAAI,CAACA,UAAL,CAAiB,CAEf,MAAO,qBAAC,IAAD,MAAP,CACD,CAED,MACE,yCAEE,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,EAFF,CAGE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEG,IAAI,CAAE,CAAR,CAAWC,eAAe,CAAE,SAA5B,CAAb,EACE,oBAAC,QAAD,EAAU,KAAK,CAAET,KAAjB,EACE,oBAAC,mBAAD,MACE,oBAAC,cAAD,EAAgB,QAAQ,CAAEC,QAA1B,EADF,CADF,CAIE,oBAAC,oBAAD,MAJF,CADF,CAHF,CADF,CAcD,CApCD,CAsCA,cAAeH,CAAAA,GAAf","sourcesContent":["/* eslint-disable global-require */\nimport React, { useEffect, useState } from 'react';\nimport { View, SafeAreaView } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { StatusBar } from 'expo-status-bar';\nimport { fontNames, Provider, themes } from 'react95-native';\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport MainNavigation from './MainNavigation';\nimport { NotificationProvider } from './util/notifications';\n\nconst App = () => {\n  const [theme, setTheme] = useState(themes.original);\n\n  const [fontLoaded] = useFonts({\n    [fontNames.normal]: require('./assets/fonts/MS-Sans-Serif.ttf'),\n    [fontNames.bold]: require('./assets/fonts/MS-Sans-Serif-Bold.ttf'),\n  });\n\n  useEffect(() => {\n    if (fontLoaded) {\n      SplashScreen.hideAsync();\n      return;\n    }\n\n    SplashScreen.preventAutoHideAsync();\n  }, [fontLoaded]);\n\n  if (!fontLoaded) {\n    /* Renders an empty view to avoid errors while the splash screen is visible */\n    return <View />;\n  }\n\n  return (\n    <>\n      {/* eslint-disable-next-line react/style-prop-object */}\n      <StatusBar style='light' />\n      <View style={{ flex: 1, backgroundColor: '#387d80' }}>\n        <Provider theme={theme}>\n          <NavigationContainer>\n            <MainNavigation setTheme={setTheme} />\n          </NavigationContainer>\n          <NotificationProvider />\n        </Provider>\n      </View>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}