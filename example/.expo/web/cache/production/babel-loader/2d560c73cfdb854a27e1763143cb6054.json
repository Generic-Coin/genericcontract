{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{PermissionStatus,SyntheticPlatformEmitter}from'expo-modules-core';import{RECORDING_OPTIONS_PRESET_HIGH_QUALITY}from\"./Audio/RecordingConstants\";function getPermissionWithQueryAsync(name){var _await$navigator$perm,state;return _regeneratorRuntime.async(function getPermissionWithQueryAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(!navigator||!navigator.permissions||!navigator.permissions.query)){_context.next=2;break;}return _context.abrupt(\"return\",null);case 2:_context.prev=2;_context.next=5;return _regeneratorRuntime.awrap(navigator.permissions.query({name:name}));case 5:_await$navigator$perm=_context.sent;state=_await$navigator$perm.state;_context.t0=state;_context.next=_context.t0==='granted'?10:_context.t0==='denied'?11:12;break;case 10:return _context.abrupt(\"return\",PermissionStatus.GRANTED);case 11:return _context.abrupt(\"return\",PermissionStatus.DENIED);case 12:return _context.abrupt(\"return\",PermissionStatus.UNDETERMINED);case 13:_context.next=18;break;case 15:_context.prev=15;_context.t1=_context[\"catch\"](2);return _context.abrupt(\"return\",PermissionStatus.UNDETERMINED);case 18:case\"end\":return _context.stop();}}},null,null,[[2,15]],Promise);}function getUserMedia(constraints){if(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia){return navigator.mediaDevices.getUserMedia(constraints);}var getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||function(){var error=new Error('Permission unimplemented');error.code=0;error.name='NotAllowedError';throw error;};return new Promise(function(resolve,reject){getUserMedia.call(navigator,constraints,resolve,reject);});}function getStatusFromMedia(media){if(!media){return{isLoaded:false,error:undefined};}var isPlaying=!!(media.currentTime>0&&!media.paused&&!media.ended&&media.readyState>2);var status={isLoaded:true,uri:media.src,progressUpdateIntervalMillis:100,durationMillis:media.duration*1000,positionMillis:media.currentTime*1000,shouldPlay:media.autoplay,isPlaying:isPlaying,isBuffering:false,rate:media.playbackRate,shouldCorrectPitch:false,volume:media.volume,isMuted:media.muted,isLooping:media.loop,didJustFinish:media.ended};return status;}function setStatusForMedia(media,status){if(status.positionMillis!==undefined){media.currentTime=status.positionMillis/1000;}if(status.shouldPlay!==undefined){if(status.shouldPlay){media.play();}else{media.pause();}}if(status.rate!==undefined){media.playbackRate=status.rate;}if(status.volume!==undefined){media.volume=status.volume;}if(status.isMuted!==undefined){media.muted=status.isMuted;}if(status.isLooping!==undefined){media.loop=status.isLooping;}return getStatusFromMedia(media);}var mediaRecorder=null;var mediaRecorderUptimeOfLastStartResume=0;var mediaRecorderDurationAlreadyRecorded=0;var mediaRecorderIsRecording=false;function getAudioRecorderDurationMillis(){var duration=mediaRecorderDurationAlreadyRecorded;if(mediaRecorderIsRecording&&mediaRecorderUptimeOfLastStartResume>0){duration+=Date.now()-mediaRecorderUptimeOfLastStartResume;}return duration;}export default{get name(){return'ExponentAV';},getStatusForVideo:function getStatusForVideo(element){return _regeneratorRuntime.async(function getStatusForVideo$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:return _context2.abrupt(\"return\",getStatusFromMedia(element));case 1:case\"end\":return _context2.stop();}}},null,null,null,Promise);},loadForVideo:function loadForVideo(element,nativeSource,fullInitialStatus){return _regeneratorRuntime.async(function loadForVideo$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:return _context3.abrupt(\"return\",getStatusFromMedia(element));case 1:case\"end\":return _context3.stop();}}},null,null,null,Promise);},unloadForVideo:function unloadForVideo(element){return _regeneratorRuntime.async(function unloadForVideo$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:return _context4.abrupt(\"return\",getStatusFromMedia(element));case 1:case\"end\":return _context4.stop();}}},null,null,null,Promise);},setStatusForVideo:function setStatusForVideo(element,status){return _regeneratorRuntime.async(function setStatusForVideo$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:return _context5.abrupt(\"return\",setStatusForMedia(element,status));case 1:case\"end\":return _context5.stop();}}},null,null,null,Promise);},replayVideo:function replayVideo(element,status){return _regeneratorRuntime.async(function replayVideo$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",setStatusForMedia(element,status));case 1:case\"end\":return _context6.stop();}}},null,null,null,Promise);},setAudioMode:function setAudioMode(){return _regeneratorRuntime.async(function setAudioMode$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:case\"end\":return _context7.stop();}}},null,null,null,Promise);},setAudioIsEnabled:function setAudioIsEnabled(){return _regeneratorRuntime.async(function setAudioIsEnabled$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:case\"end\":return _context8.stop();}}},null,null,null,Promise);},getStatusForSound:function getStatusForSound(element){return _regeneratorRuntime.async(function getStatusForSound$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:return _context9.abrupt(\"return\",getStatusFromMedia(element));case 1:case\"end\":return _context9.stop();}}},null,null,null,Promise);},loadForSound:function loadForSound(nativeSource,fullInitialStatus){var source,media,status;return _regeneratorRuntime.async(function loadForSound$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:source=typeof nativeSource==='string'?nativeSource:nativeSource.uri;media=new Audio(source);media.ontimeupdate=function(){SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus',{key:media,status:getStatusFromMedia(media)});};media.onerror=function(){SyntheticPlatformEmitter.emit('ExponentAV.onError',{key:media,error:media.error.message});};status=setStatusForMedia(media,fullInitialStatus);return _context10.abrupt(\"return\",[media,status]);case 6:case\"end\":return _context10.stop();}}},null,null,null,Promise);},unloadForSound:function unloadForSound(element){return _regeneratorRuntime.async(function unloadForSound$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:element.pause();element.removeAttribute('src');element.load();return _context11.abrupt(\"return\",getStatusFromMedia(element));case 4:case\"end\":return _context11.stop();}}},null,null,null,Promise);},setStatusForSound:function setStatusForSound(element,status){return _regeneratorRuntime.async(function setStatusForSound$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:return _context12.abrupt(\"return\",setStatusForMedia(element,status));case 1:case\"end\":return _context12.stop();}}},null,null,null,Promise);},replaySound:function replaySound(element,status){return _regeneratorRuntime.async(function replaySound$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:return _context13.abrupt(\"return\",setStatusForMedia(element,status));case 1:case\"end\":return _context13.stop();}}},null,null,null,Promise);},getAudioRecordingStatus:function getAudioRecordingStatus(){var _mediaRecorder,_mediaRecorder2,_mediaRecorder3;return _regeneratorRuntime.async(function getAudioRecordingStatus$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:return _context14.abrupt(\"return\",{canRecord:((_mediaRecorder=mediaRecorder)==null?void 0:_mediaRecorder.state)==='recording'||((_mediaRecorder2=mediaRecorder)==null?void 0:_mediaRecorder2.state)==='inactive',isRecording:((_mediaRecorder3=mediaRecorder)==null?void 0:_mediaRecorder3.state)==='recording',isDoneRecording:false,durationMillis:getAudioRecorderDurationMillis(),uri:null});case 1:case\"end\":return _context14.stop();}}},null,null,null,Promise);},prepareAudioRecorder:function prepareAudioRecorder(options){var stream,_await$this$getAudioR,uri,status;return _regeneratorRuntime.async(function prepareAudioRecorder$(_context15){while(1){switch(_context15.prev=_context15.next){case 0:if(!(typeof navigator!=='undefined'&&!navigator.mediaDevices)){_context15.next=2;break;}throw new Error('No media devices available');case 2:mediaRecorderUptimeOfLastStartResume=0;mediaRecorderDurationAlreadyRecorded=0;_context15.next=6;return _regeneratorRuntime.awrap(getUserMedia({audio:true}));case 6:stream=_context15.sent;mediaRecorder=new window.MediaRecorder(stream,(options==null?void 0:options.web)||RECORDING_OPTIONS_PRESET_HIGH_QUALITY.web);mediaRecorder.addEventListener('pause',function(){mediaRecorderDurationAlreadyRecorded=getAudioRecorderDurationMillis();mediaRecorderIsRecording=false;});mediaRecorder.addEventListener('resume',function(){mediaRecorderUptimeOfLastStartResume=Date.now();mediaRecorderIsRecording=true;});mediaRecorder.addEventListener('start',function(){mediaRecorderUptimeOfLastStartResume=Date.now();mediaRecorderDurationAlreadyRecorded=0;mediaRecorderIsRecording=true;});mediaRecorder.addEventListener('stop',function(){mediaRecorderDurationAlreadyRecorded=getAudioRecorderDurationMillis();mediaRecorderIsRecording=false;stream.getTracks().forEach(function(track){return track.stop();});});_context15.next=14;return _regeneratorRuntime.awrap(this.getAudioRecordingStatus());case 14:_await$this$getAudioR=_context15.sent;uri=_await$this$getAudioR.uri;status=_objectWithoutProperties(_await$this$getAudioR,[\"uri\"]);return _context15.abrupt(\"return\",{uri:null,status:status});case 18:case\"end\":return _context15.stop();}}},null,this,null,Promise);},startAudioRecording:function startAudioRecording(){return _regeneratorRuntime.async(function startAudioRecording$(_context16){while(1){switch(_context16.prev=_context16.next){case 0:if(!(mediaRecorder===null)){_context16.next=2;break;}throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');case 2:if(mediaRecorder.state==='paused'){mediaRecorder.resume();}else{mediaRecorder.start();}return _context16.abrupt(\"return\",this.getAudioRecordingStatus());case 4:case\"end\":return _context16.stop();}}},null,this,null,Promise);},pauseAudioRecording:function pauseAudioRecording(){return _regeneratorRuntime.async(function pauseAudioRecording$(_context17){while(1){switch(_context17.prev=_context17.next){case 0:if(!(mediaRecorder===null)){_context17.next=2;break;}throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');case 2:mediaRecorder.pause();return _context17.abrupt(\"return\",this.getAudioRecordingStatus());case 4:case\"end\":return _context17.stop();}}},null,this,null,Promise);},stopAudioRecording:function stopAudioRecording(){var dataPromise,data,url;return _regeneratorRuntime.async(function stopAudioRecording$(_context18){while(1){switch(_context18.prev=_context18.next){case 0:if(!(mediaRecorder===null)){_context18.next=2;break;}throw new Error('Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.');case 2:if(!(mediaRecorder.state==='inactive')){_context18.next=4;break;}return _context18.abrupt(\"return\",this.getAudioRecordingStatus());case 4:dataPromise=new Promise(function(resolve){return mediaRecorder.addEventListener('dataavailable',function(e){return resolve(e.data);});});mediaRecorder.stop();_context18.next=8;return _regeneratorRuntime.awrap(dataPromise);case 8:data=_context18.sent;url=URL.createObjectURL(data);_context18.t0=_objectSpread;_context18.t1=_objectSpread;_context18.t2={};_context18.next=15;return _regeneratorRuntime.awrap(this.getAudioRecordingStatus());case 15:_context18.t3=_context18.sent;_context18.t4=(0,_context18.t1)(_context18.t2,_context18.t3);_context18.t5={};_context18.t6={uri:url};return _context18.abrupt(\"return\",(0,_context18.t0)(_context18.t4,_context18.t5,_context18.t6));case 20:case\"end\":return _context18.stop();}}},null,this,null,Promise);},unloadAudioRecorder:function unloadAudioRecorder(){return _regeneratorRuntime.async(function unloadAudioRecorder$(_context19){while(1){switch(_context19.prev=_context19.next){case 0:mediaRecorder=null;case 1:case\"end\":return _context19.stop();}}},null,null,null,Promise);},getPermissionsAsync:function getPermissionsAsync(){var maybeStatus;return _regeneratorRuntime.async(function getPermissionsAsync$(_context20){while(1){switch(_context20.prev=_context20.next){case 0:_context20.next=2;return _regeneratorRuntime.awrap(getPermissionWithQueryAsync('microphone'));case 2:maybeStatus=_context20.sent;_context20.t0=maybeStatus;_context20.next=_context20.t0===PermissionStatus.GRANTED?6:_context20.t0===PermissionStatus.DENIED?7:8;break;case 6:return _context20.abrupt(\"return\",{status:PermissionStatus.GRANTED,expires:'never',canAskAgain:true,granted:true});case 7:return _context20.abrupt(\"return\",{status:PermissionStatus.DENIED,expires:'never',canAskAgain:true,granted:false});case 8:_context20.next=10;return _regeneratorRuntime.awrap(this.requestPermissionsAsync());case 10:return _context20.abrupt(\"return\",_context20.sent);case 11:case\"end\":return _context20.stop();}}},null,this,null,Promise);},requestPermissionsAsync:function requestPermissionsAsync(){var stream;return _regeneratorRuntime.async(function requestPermissionsAsync$(_context21){while(1){switch(_context21.prev=_context21.next){case 0:_context21.prev=0;_context21.next=3;return _regeneratorRuntime.awrap(getUserMedia({audio:true}));case 3:stream=_context21.sent;stream.getTracks().forEach(function(track){return track.stop();});return _context21.abrupt(\"return\",{status:PermissionStatus.GRANTED,expires:'never',canAskAgain:true,granted:true});case 8:_context21.prev=8;_context21.t0=_context21[\"catch\"](0);return _context21.abrupt(\"return\",{status:PermissionStatus.DENIED,expires:'never',canAskAgain:true,granted:false});case 11:case\"end\":return _context21.stop();}}},null,null,[[0,8]],Promise);}};","map":{"version":3,"sources":["../src/ExponentAV.web.ts"],"names":[],"mappings":"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","sourcesContent":["import { PermissionResponse, PermissionStatus, SyntheticPlatformEmitter } from 'expo-modules-core';\n\nimport type { AVPlaybackNativeSource, AVPlaybackStatus, AVPlaybackStatusToSet } from './AV.types';\nimport type { RecordingStatus } from './Audio/Recording.types';\nimport { RECORDING_OPTIONS_PRESET_HIGH_QUALITY } from './Audio/RecordingConstants';\n\nasync function getPermissionWithQueryAsync(\n  name: PermissionNameWithAdditionalValues\n): Promise<PermissionStatus | null> {\n  if (!navigator || !navigator.permissions || !navigator.permissions.query) return null;\n\n  try {\n    const { state } = await navigator.permissions.query({ name });\n    switch (state) {\n      case 'granted':\n        return PermissionStatus.GRANTED;\n      case 'denied':\n        return PermissionStatus.DENIED;\n      default:\n        return PermissionStatus.UNDETERMINED;\n    }\n  } catch (error) {\n    // FireFox - TypeError: 'microphone' (value of 'name' member of PermissionDescriptor) is not a valid value for enumeration PermissionName.\n    return PermissionStatus.UNDETERMINED;\n  }\n}\n\nfunction getUserMedia(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  // Some browsers partially implement mediaDevices. We can't just assign an object\n  // with getUserMedia as it would overwrite existing properties.\n  // Here, we will just add the getUserMedia property if it's missing.\n\n  // First get ahold of the legacy getUserMedia, if present\n  const getUserMedia =\n    // TODO: this method is deprecated, migrate to https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    function () {\n      const error: any = new Error('Permission unimplemented');\n      error.code = 0;\n      error.name = 'NotAllowedError';\n      throw error;\n    };\n\n  return new Promise((resolve, reject) => {\n    getUserMedia.call(navigator, constraints, resolve, reject);\n  });\n}\n\nfunction getStatusFromMedia(media?: HTMLMediaElement): AVPlaybackStatus {\n  if (!media) {\n    return {\n      isLoaded: false,\n      error: undefined,\n    };\n  }\n\n  const isPlaying = !!(\n    media.currentTime > 0 &&\n    !media.paused &&\n    !media.ended &&\n    media.readyState > 2\n  );\n\n  const status: AVPlaybackStatus = {\n    isLoaded: true,\n    uri: media.src,\n    progressUpdateIntervalMillis: 100, //TODO: Bacon: Add interval between calls\n    durationMillis: media.duration * 1000,\n    positionMillis: media.currentTime * 1000,\n    // playableDurationMillis: media.buffered * 1000,\n    // seekMillisToleranceBefore?: number\n    // seekMillisToleranceAfter?: number\n    shouldPlay: media.autoplay,\n    isPlaying,\n    isBuffering: false, //media.waiting,\n    rate: media.playbackRate,\n    // TODO: Bacon: This seems too complicated right now: https://webaudio.github.io/web-audio-api/#dom-biquadfilternode-frequency\n    shouldCorrectPitch: false,\n    volume: media.volume,\n    isMuted: media.muted,\n    isLooping: media.loop,\n    didJustFinish: media.ended,\n  };\n\n  return status;\n}\n\nfunction setStatusForMedia(\n  media: HTMLMediaElement,\n  status: AVPlaybackStatusToSet\n): AVPlaybackStatus {\n  if (status.positionMillis !== undefined) {\n    media.currentTime = status.positionMillis / 1000;\n  }\n  // if (status.progressUpdateIntervalMillis !== undefined) {\n  //   media.progressUpdateIntervalMillis = status.progressUpdateIntervalMillis;\n  // }\n  // if (status.seekMillisToleranceBefore !== undefined) {\n  //   media.seekMillisToleranceBefore = status.seekMillisToleranceBefore;\n  // }\n  // if (status.seekMillisToleranceAfter !== undefined) {\n  //   media.seekMillisToleranceAfter = status.seekMillisToleranceAfter;\n  // }\n  // if (status.shouldCorrectPitch !== undefined) {\n  //   media.shouldCorrectPitch = status.shouldCorrectPitch;\n  // }\n  if (status.shouldPlay !== undefined) {\n    if (status.shouldPlay) {\n      media.play();\n    } else {\n      media.pause();\n    }\n  }\n  if (status.rate !== undefined) {\n    media.playbackRate = status.rate;\n  }\n  if (status.volume !== undefined) {\n    media.volume = status.volume;\n  }\n  if (status.isMuted !== undefined) {\n    media.muted = status.isMuted;\n  }\n  if (status.isLooping !== undefined) {\n    media.loop = status.isLooping;\n  }\n\n  return getStatusFromMedia(media);\n}\n\nlet mediaRecorder: null | any /*MediaRecorder*/ = null;\nlet mediaRecorderUptimeOfLastStartResume: number = 0;\nlet mediaRecorderDurationAlreadyRecorded: number = 0;\nlet mediaRecorderIsRecording: boolean = false;\n\nfunction getAudioRecorderDurationMillis() {\n  let duration = mediaRecorderDurationAlreadyRecorded;\n  if (mediaRecorderIsRecording && mediaRecorderUptimeOfLastStartResume > 0) {\n    duration += Date.now() - mediaRecorderUptimeOfLastStartResume;\n  }\n  return duration;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentAV';\n  },\n  async getStatusForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async loadForVideo(\n    element: HTMLMediaElement,\n    nativeSource: AVPlaybackNativeSource,\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async unloadForVideo(element: HTMLMediaElement): Promise<AVPlaybackStatus> {\n    return getStatusFromMedia(element);\n  },\n  async setStatusForVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replayVideo(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  /* Audio */\n  async setAudioMode() {},\n  async setAudioIsEnabled() {},\n  async getStatusForSound(element: HTMLMediaElement) {\n    return getStatusFromMedia(element);\n  },\n  async loadForSound(\n    nativeSource: string | { uri: string; [key: string]: any },\n    fullInitialStatus: AVPlaybackStatusToSet\n  ): Promise<[HTMLMediaElement, AVPlaybackStatus]> {\n    const source = typeof nativeSource === 'string' ? nativeSource : nativeSource.uri;\n    const media = new Audio(source);\n\n    media.ontimeupdate = () => {\n      SyntheticPlatformEmitter.emit('didUpdatePlaybackStatus', {\n        key: media,\n        status: getStatusFromMedia(media),\n      });\n    };\n\n    media.onerror = () => {\n      SyntheticPlatformEmitter.emit('ExponentAV.onError', {\n        key: media,\n        error: media.error!.message,\n      });\n    };\n\n    const status = setStatusForMedia(media, fullInitialStatus);\n\n    return [media, status];\n  },\n  async unloadForSound(element: HTMLMediaElement) {\n    element.pause();\n    element.removeAttribute('src');\n    element.load();\n    return getStatusFromMedia(element);\n  },\n  async setStatusForSound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n  async replaySound(\n    element: HTMLMediaElement,\n    status: AVPlaybackStatusToSet\n  ): Promise<AVPlaybackStatus> {\n    return setStatusForMedia(element, status);\n  },\n\n  /* Recording */\n  //   async setUnloadedCallbackForAndroidRecording() {},\n  async getAudioRecordingStatus(): Promise<RecordingStatus> {\n    return {\n      canRecord: mediaRecorder?.state === 'recording' || mediaRecorder?.state === 'inactive',\n      isRecording: mediaRecorder?.state === 'recording',\n      isDoneRecording: false,\n      durationMillis: getAudioRecorderDurationMillis(),\n      uri: null,\n    };\n  },\n  async prepareAudioRecorder(options): Promise<{\n    uri: string | null;\n    // status is of type RecordingStatus, but without the canRecord field populated\n    status: Pick<RecordingStatus, Exclude<keyof RecordingStatus, 'canRecord'>>;\n  }> {\n    if (typeof navigator !== 'undefined' && !navigator.mediaDevices) {\n      throw new Error('No media devices available');\n    }\n\n    mediaRecorderUptimeOfLastStartResume = 0;\n    mediaRecorderDurationAlreadyRecorded = 0;\n\n    const stream = await getUserMedia({ audio: true });\n\n    mediaRecorder = new (window as any).MediaRecorder(\n      stream,\n      options?.web || RECORDING_OPTIONS_PRESET_HIGH_QUALITY.web\n    );\n\n    mediaRecorder.addEventListener('pause', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n    });\n\n    mediaRecorder.addEventListener('resume', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('start', () => {\n      mediaRecorderUptimeOfLastStartResume = Date.now();\n      mediaRecorderDurationAlreadyRecorded = 0;\n      mediaRecorderIsRecording = true;\n    });\n\n    mediaRecorder.addEventListener('stop', () => {\n      mediaRecorderDurationAlreadyRecorded = getAudioRecorderDurationMillis();\n      mediaRecorderIsRecording = false;\n\n      // Clears recording icon in Chrome tab\n      stream.getTracks().forEach((track) => track.stop());\n    });\n\n    const { uri, ...status } = await this.getAudioRecordingStatus();\n\n    return { uri: null, status };\n  },\n  async startAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'paused') {\n      mediaRecorder.resume();\n    } else {\n      mediaRecorder.start();\n    }\n\n    return this.getAudioRecordingStatus();\n  },\n  async pauseAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    // Set status to paused\n    mediaRecorder.pause();\n\n    return this.getAudioRecordingStatus();\n  },\n  async stopAudioRecording(): Promise<RecordingStatus> {\n    if (mediaRecorder === null) {\n      throw new Error(\n        'Cannot start an audio recording without initializing a MediaRecorder. Run prepareToRecordAsync() before attempting to start an audio recording.'\n      );\n    }\n\n    if (mediaRecorder.state === 'inactive') {\n      return this.getAudioRecordingStatus();\n    }\n\n    const dataPromise = new Promise((resolve) =>\n      mediaRecorder.addEventListener('dataavailable', (e) => resolve(e.data))\n    );\n\n    mediaRecorder.stop();\n\n    const data = await dataPromise;\n    const url = URL.createObjectURL(data);\n\n    return {\n      ...(await this.getAudioRecordingStatus()),\n      uri: url,\n    };\n  },\n  async unloadAudioRecorder(): Promise<void> {\n    mediaRecorder = null;\n  },\n\n  async getPermissionsAsync(): Promise<PermissionResponse> {\n    const maybeStatus = await getPermissionWithQueryAsync('microphone');\n    switch (maybeStatus) {\n      case PermissionStatus.GRANTED:\n        return {\n          status: PermissionStatus.GRANTED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: true,\n        };\n      case PermissionStatus.DENIED:\n        return {\n          status: PermissionStatus.DENIED,\n          expires: 'never',\n          canAskAgain: true,\n          granted: false,\n        };\n      default:\n        return await this.requestPermissionsAsync();\n    }\n  },\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    try {\n      const stream = await getUserMedia({ audio: true });\n      stream.getTracks().forEach((track) => track.stop());\n      return {\n        status: PermissionStatus.GRANTED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: true,\n      };\n    } catch (e) {\n      return {\n        status: PermissionStatus.DENIED,\n        expires: 'never',\n        canAskAgain: true,\n        granted: false,\n      };\n    }\n  },\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}