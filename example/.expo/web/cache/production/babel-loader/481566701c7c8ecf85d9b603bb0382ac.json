{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from'react';import{Slider,Fieldset}from\"/Users/joel/Projects/crypto/genericv2/src/index\";import*as Haptics from'expo-haptics';import{notificationService}from\"../util/notifications\";import ExamplePanel from\"../util/ExamplePanel\";var restrictedValues=[0,20,80,100].map(function(n){return{label:n.toString()+\"\\xB0C\",value:n};});var hapticFeedback=function hapticFeedback(){return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);};var DividerExample=function DividerExample(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),value=_React$useState2[0],setValue=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),withTicksValue=_React$useState4[0],setWithTicksValue=_React$useState4[1];var _React$useState5=React.useState(restrictedValues[0].value),_React$useState6=_slicedToArray(_React$useState5,2),restrictedValue=_React$useState6[0],setRestrictedValue=_React$useState6[1];var handleChange=function handleChange(newValue){hapticFeedback();setValue(newValue);};var handleWithTicksValueChange=function handleWithTicksValueChange(newValue){hapticFeedback();setWithTicksValue(newValue);};var handleRestrictedValueChange=function handleRestrictedValueChange(newValue){hapticFeedback();setRestrictedValue(newValue);};var sendNotification=function sendNotification(val){notificationService.send({message:\"Value selected: \"+val,closeButtonLabel:'OK!'});};return React.createElement(ExamplePanel,null,React.createElement(Fieldset,{label:\"Default:\",style:{padding:16}},React.createElement(Slider,{step:2,onChange:handleChange,onChangeCommitted:sendNotification,value:value})),React.createElement(Fieldset,{label:\"With ticks:\",style:{padding:16}},React.createElement(Slider,{onChange:handleWithTicksValueChange,onChangeCommitted:sendNotification,value:withTicksValue,marks:true,step:10})),React.createElement(Fieldset,{label:\"Restricted values:\",style:{padding:24}},React.createElement(Slider,{onChange:handleRestrictedValueChange,onChangeCommitted:sendNotification,value:restrictedValue,marks:restrictedValues,step:null})),React.createElement(Fieldset,{label:\"Disabled:\",style:{padding:24}},React.createElement(Slider,{disabled:true,marks:restrictedValues,step:null})));};export default DividerExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/SliderExample.tsx"],"names":["React","Slider","Fieldset","Haptics","notificationService","ExamplePanel","restrictedValues","map","n","label","toString","value","hapticFeedback","impactAsync","ImpactFeedbackStyle","Light","DividerExample","useState","setValue","withTicksValue","setWithTicksValue","restrictedValue","setRestrictedValue","handleChange","newValue","handleWithTicksValueChange","handleRestrictedValueChange","sendNotification","val","send","message","closeButtonLabel","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Slider, Fieldset } from 'react95-native';\nimport * as Haptics from 'expo-haptics';\nimport { notificationService } from '../util/notifications';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst restrictedValues = [0, 20, 80, 100].map(n => ({\n  label: `${n.toString()}Â°C`,\n  value: n,\n}));\n\nconst hapticFeedback = () =>\n  Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n\nconst DividerExample = () => {\n  const [value, setValue] = React.useState(0);\n  const [withTicksValue, setWithTicksValue] = React.useState(0);\n  const [restrictedValue, setRestrictedValue] = React.useState(\n    restrictedValues[0].value,\n  );\n\n  const handleChange = (newValue: number) => {\n    hapticFeedback();\n    setValue(newValue);\n  };\n\n  const handleWithTicksValueChange = (newValue: number) => {\n    hapticFeedback();\n    setWithTicksValue(newValue);\n  };\n\n  const handleRestrictedValueChange = (newValue: number) => {\n    hapticFeedback();\n    setRestrictedValue(newValue);\n  };\n\n  const sendNotification = (val: number) => {\n    notificationService.send({\n      message: `Value selected: ${val}`,\n      closeButtonLabel: 'OK!',\n    });\n  };\n\n  return (\n    <ExamplePanel>\n      <Fieldset label='Default:' style={{ padding: 16 }}>\n        <Slider\n          step={2}\n          onChange={handleChange}\n          onChangeCommitted={sendNotification}\n          value={value}\n        />\n      </Fieldset>\n\n      <Fieldset label='With ticks:' style={{ padding: 16 }}>\n        <Slider\n          onChange={handleWithTicksValueChange}\n          onChangeCommitted={sendNotification}\n          value={withTicksValue}\n          marks\n          step={10}\n        />\n      </Fieldset>\n\n      <Fieldset label='Restricted values:' style={{ padding: 24 }}>\n        <Slider\n          onChange={handleRestrictedValueChange}\n          onChangeCommitted={sendNotification}\n          value={restrictedValue}\n          marks={restrictedValues}\n          step={null}\n        />\n      </Fieldset>\n\n      <Fieldset label='Disabled:' style={{ padding: 24 }}>\n        <Slider disabled marks={restrictedValues} step={null} />\n      </Fieldset>\n    </ExamplePanel>\n  );\n};\n\nexport default DividerExample;\n"]},"metadata":{},"sourceType":"module"}