{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import{Progress,Fieldset}from\"/Users/joel/Projects/crypto/genericv2/src/index\";import ExamplePanel from\"../util/ExamplePanel\";var DividerExample=function DividerExample(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),percent=_useState2[0],setPercent=_useState2[1];useEffect(function(){var timer=setInterval(function(){setPercent(function(previousPercent){if(previousPercent===100){return 0;}var diff=Math.random()*10;return Math.min(previousPercent+diff,100);});},500);return function(){clearInterval(timer);};},[]);return React.createElement(ExamplePanel,null,React.createElement(Fieldset,{label:\"Default\",style:[{padding:20}]},React.createElement(Progress,{percent:percent,background:\"canvas\"})),React.createElement(Fieldset,{label:\"Tile\",style:[{padding:20}]},React.createElement(Progress,{variant:\"tile\",percent:percent})));};export default DividerExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/ProgressExample.tsx"],"names":["React","useState","useEffect","Progress","Fieldset","ExamplePanel","DividerExample","percent","setPercent","timer","setInterval","previousPercent","diff","Math","random","min","clearInterval","padding"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,QAAT,CAAmBC,QAAnB,uDAEA,MAAOC,CAAAA,YAAP,4BAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACGL,QAAQ,CAAC,CAAD,CADX,wCACpBM,OADoB,eACXC,UADW,eAG3BN,SAAS,CAAC,UAAM,CACd,GAAMO,CAAAA,KAAK,CAAGC,WAAW,CAAC,UAAM,CAC9BF,UAAU,CAAC,SAAAG,eAAe,CAAI,CAC5B,GAAIA,eAAe,GAAK,GAAxB,CAA6B,CAC3B,MAAO,EAAP,CACD,CACD,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,MAAL,GAAgB,EAA7B,CACA,MAAOD,CAAAA,IAAI,CAACE,GAAL,CAASJ,eAAe,CAAGC,IAA3B,CAAiC,GAAjC,CAAP,CACD,CANS,CAAV,CAOD,CARwB,CAQtB,GARsB,CAAzB,CASA,MAAO,WAAM,CACXI,aAAa,CAACP,KAAD,CAAb,CACD,CAFD,CAGD,CAbQ,CAaN,EAbM,CAAT,CAcA,MACE,qBAAC,YAAD,MACE,oBAAC,QAAD,EAAU,KAAK,CAAC,SAAhB,CAA0B,KAAK,CAAE,CAAC,CAAEQ,OAAO,CAAE,EAAX,CAAD,CAAjC,EACE,oBAAC,QAAD,EAAU,OAAO,CAAEV,OAAnB,CAA4B,UAAU,CAAC,QAAvC,EADF,CADF,CAIE,oBAAC,QAAD,EAAU,KAAK,CAAC,MAAhB,CAAuB,KAAK,CAAE,CAAC,CAAEU,OAAO,CAAE,EAAX,CAAD,CAA9B,EACE,oBAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,OAAO,CAAEV,OAAlC,EADF,CAJF,CADF,CAUD,CA3BD,CA6BA,cAAeD,CAAAA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Progress, Fieldset } from 'react95-native';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst DividerExample = () => {\n  const [percent, setPercent] = useState(0);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setPercent(previousPercent => {\n        if (previousPercent === 100) {\n          return 0;\n        }\n        const diff = Math.random() * 10;\n        return Math.min(previousPercent + diff, 100);\n      });\n    }, 500);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return (\n    <ExamplePanel>\n      <Fieldset label='Default' style={[{ padding: 20 }]}>\n        <Progress percent={percent} background='canvas' />\n      </Fieldset>\n      <Fieldset label='Tile' style={[{ padding: 20 }]}>\n        <Progress variant='tile' percent={percent} />\n      </Fieldset>\n    </ExamplePanel>\n  );\n};\n\nexport default DividerExample;\n"]},"metadata":{},"sourceType":"module"}