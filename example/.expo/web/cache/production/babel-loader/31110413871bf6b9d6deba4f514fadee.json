{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import{Checkbox,Fieldset,Panel}from\"/Users/joel/Projects/crypto/genericv2/src/index\";import ExamplePanel from\"../util/ExamplePanel\";var CheckboxExample=function CheckboxExample(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isChecked=_useState2[0],setIsChecked=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isCheckedFlat=_useState4[0],setIsCheckedFlat=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isIndeterminate=_useState6[0],setIsIndeterminate=_useState6[1];return React.createElement(ExamplePanel,null,React.createElement(Fieldset,{label:\"Default\"},React.createElement(Checkbox,{status:isChecked?'checked':'unchecked',onPress:function onPress(){return setIsChecked(function(prevState){return!prevState;});},label:\"Cheese\"}),React.createElement(Checkbox,{status:\"checked\",label:\"Pineapple\",disabled:true})),React.createElement(Fieldset,{label:\"Indeterminate\"},React.createElement(Checkbox,{status:isIndeterminate?'indeterminate':'unchecked',onPress:function onPress(){return setIsIndeterminate(function(prevState){return!prevState;});},label:\"Cheese\"}),React.createElement(Checkbox,{status:\"indeterminate\",label:\"Pineapple\",disabled:true})),React.createElement(Panel,{variant:\"cutout\",background:\"canvas\"},React.createElement(View,{style:{padding:20}},React.createElement(Fieldset,{variant:\"flat\",label:\"Default\"},React.createElement(Checkbox,{variant:\"flat\",status:isCheckedFlat?'checked':'unchecked',onPress:function onPress(){return setIsCheckedFlat(function(prevState){return!prevState;});},label:\"Cheese\"}),React.createElement(Checkbox,{variant:\"flat\",status:\"checked\",label:\"Pineapple\",disabled:true})),React.createElement(Fieldset,{variant:\"flat\",label:\"Indeterminate\"},React.createElement(Checkbox,{variant:\"flat\",status:isIndeterminate?'indeterminate':'unchecked',onPress:function onPress(){return setIsIndeterminate(function(prevState){return!prevState;});},label:\"Cheese\"}),React.createElement(Checkbox,{variant:\"flat\",status:\"indeterminate\",label:\"Pineapple\",disabled:true})))));};export default CheckboxExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/CheckboxExample.tsx"],"names":["React","useState","Checkbox","Fieldset","Panel","ExamplePanel","CheckboxExample","isChecked","setIsChecked","isCheckedFlat","setIsCheckedFlat","isIndeterminate","setIsIndeterminate","prevState","padding"],"mappings":"iEACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,C,qDAEA,OAASC,QAAT,CAAmBC,QAAnB,CAA6BC,KAA7B,uDAEA,MAAOC,CAAAA,YAAP,4BAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,eACML,QAAQ,CAAC,IAAD,CADd,wCACrBM,SADqB,eACVC,YADU,8BAEcP,QAAQ,CAAC,IAAD,CAFtB,yCAErBQ,aAFqB,eAENC,gBAFM,8BAIkBT,QAAQ,CAAC,IAAD,CAJ1B,yCAIrBU,eAJqB,eAIJC,kBAJI,eAM5B,MACE,qBAAC,YAAD,MACE,oBAAC,QAAD,EAAU,KAAK,CAAC,SAAhB,EACE,oBAAC,QAAD,EACE,MAAM,CAAEL,SAAS,CAAG,SAAH,CAAe,WADlC,CAEE,OAAO,CAAE,yBAAMC,CAAAA,YAAY,CAAC,SAAAK,SAAS,QAAI,CAACA,SAAL,EAAV,CAAlB,EAFX,CAGE,KAAK,CAAC,QAHR,EADF,CAME,oBAAC,QAAD,EAAU,MAAM,CAAC,SAAjB,CAA2B,KAAK,CAAC,WAAjC,CAA6C,QAAQ,KAArD,EANF,CADF,CASE,oBAAC,QAAD,EAAU,KAAK,CAAC,eAAhB,EACE,oBAAC,QAAD,EACE,MAAM,CAAEF,eAAe,CAAG,eAAH,CAAqB,WAD9C,CAEE,OAAO,CAAE,yBAAMC,CAAAA,kBAAkB,CAAC,SAAAC,SAAS,QAAI,CAACA,SAAL,EAAV,CAAxB,EAFX,CAGE,KAAK,CAAC,QAHR,EADF,CAME,oBAAC,QAAD,EAAU,MAAM,CAAC,eAAjB,CAAiC,KAAK,CAAC,WAAvC,CAAmD,QAAQ,KAA3D,EANF,CATF,CAiBE,oBAAC,KAAD,EAAO,OAAO,CAAC,QAAf,CAAwB,UAAU,CAAC,QAAnC,EACE,oBAAC,IAAD,EAAM,KAAK,CAAE,CAAEC,OAAO,CAAE,EAAX,CAAb,EACE,oBAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAC,SAA/B,EACE,oBAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,MAAM,CAAEL,aAAa,CAAG,SAAH,CAAe,WAFtC,CAGE,OAAO,CAAE,yBAAMC,CAAAA,gBAAgB,CAAC,SAAAG,SAAS,QAAI,CAACA,SAAL,EAAV,CAAtB,EAHX,CAIE,KAAK,CAAC,QAJR,EADF,CAOE,oBAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,MAAM,CAAC,SAFT,CAGE,KAAK,CAAC,WAHR,CAIE,QAAQ,KAJV,EAPF,CADF,CAeE,oBAAC,QAAD,EAAU,OAAO,CAAC,MAAlB,CAAyB,KAAK,CAAC,eAA/B,EACE,oBAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,MAAM,CAAEF,eAAe,CAAG,eAAH,CAAqB,WAF9C,CAGE,OAAO,CAAE,yBAAMC,CAAAA,kBAAkB,CAAC,SAAAC,SAAS,QAAI,CAACA,SAAL,EAAV,CAAxB,EAHX,CAIE,KAAK,CAAC,QAJR,EADF,CAOE,oBAAC,QAAD,EACE,OAAO,CAAC,MADV,CAEE,MAAM,CAAC,eAFT,CAGE,KAAK,CAAC,WAHR,CAIE,QAAQ,KAJV,EAPF,CAfF,CADF,CAjBF,CADF,CAoDD,CA1DD,CA4DA,cAAeP,CAAAA,eAAf","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, Fieldset, Panel } from 'react95-native';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst CheckboxExample = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  const [isCheckedFlat, setIsCheckedFlat] = useState(true);\n\n  const [isIndeterminate, setIsIndeterminate] = useState(true);\n\n  return (\n    <ExamplePanel>\n      <Fieldset label='Default'>\n        <Checkbox\n          status={isChecked ? 'checked' : 'unchecked'}\n          onPress={() => setIsChecked(prevState => !prevState)}\n          label='Cheese'\n        />\n        <Checkbox status='checked' label='Pineapple' disabled />\n      </Fieldset>\n      <Fieldset label='Indeterminate'>\n        <Checkbox\n          status={isIndeterminate ? 'indeterminate' : 'unchecked'}\n          onPress={() => setIsIndeterminate(prevState => !prevState)}\n          label='Cheese'\n        />\n        <Checkbox status='indeterminate' label='Pineapple' disabled />\n      </Fieldset>\n      <Panel variant='cutout' background='canvas'>\n        <View style={{ padding: 20 }}>\n          <Fieldset variant='flat' label='Default'>\n            <Checkbox\n              variant='flat'\n              status={isCheckedFlat ? 'checked' : 'unchecked'}\n              onPress={() => setIsCheckedFlat(prevState => !prevState)}\n              label='Cheese'\n            />\n            <Checkbox\n              variant='flat'\n              status='checked'\n              label='Pineapple'\n              disabled\n            />\n          </Fieldset>\n          <Fieldset variant='flat' label='Indeterminate'>\n            <Checkbox\n              variant='flat'\n              status={isIndeterminate ? 'indeterminate' : 'unchecked'}\n              onPress={() => setIsIndeterminate(prevState => !prevState)}\n              label='Cheese'\n            />\n            <Checkbox\n              variant='flat'\n              status='indeterminate'\n              label='Pineapple'\n              disabled\n            />\n          </Fieldset>\n        </View>\n      </Panel>\n    </ExamplePanel>\n  );\n};\n\nexport default CheckboxExample;\n"]},"metadata":{},"sourceType":"module"}