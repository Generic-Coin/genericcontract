{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}export default function getActionFromState(state,options){var normalizedConfig=options?createNormalizedConfigItem(options):{};var payload;var current=state;var config=normalizedConfig;var params={};while(current){var _config,_config2,_config2$screens;if(current.routes.length===0){return undefined;}var route=current.routes[current.routes.length-1];if(current.routes.length===1){params.initial=true;params.screen=route.name;params.state=undefined;}else if(current.routes.length===2&&current.routes[0].key===undefined&&current.routes[0].name===((_config=config)===null||_config===void 0?void 0:_config.initialRouteName)){params.initial=false;params.screen=route.name;params.state=undefined;}else{params.initial=undefined;params.screen=undefined;params.params=undefined;params.state=current;break;}if(route.state){params.params=_objectSpread({},route.params);params=params.params;}else{params.params=route.params;}current=route.state;config=(_config2=config)===null||_config2===void 0?void 0:(_config2$screens=_config2.screens)===null||_config2$screens===void 0?void 0:_config2$screens[route.name];if(!payload){payload={name:route.name,params:params};}}if(!payload){return;}return{type:'NAVIGATE',payload:payload};}var createNormalizedConfigItem=function createNormalizedConfigItem(config){return typeof config==='object'&&config!=null?{initialRouteName:config.initialRouteName,screens:config.screens!=null?createNormalizedConfigs(config.screens):undefined}:{};};var createNormalizedConfigs=function createNormalizedConfigs(options){return Object.entries(options).reduce(function(acc,_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];acc[k]=createNormalizedConfigItem(v);return acc;},{});};","map":{"version":3,"sources":["getActionFromState.tsx"],"names":["normalizedConfig","options","createNormalizedConfigItem","current","config","params","route","payload","name","type","initialRouteName","screens","createNormalizedConfigs","undefined","acc"],"mappings":"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","sourcesContent":["import type {\n  Route,\n  PartialRoute,\n  NavigationState,\n  PartialState,\n} from '@react-navigation/routers';\nimport type { PathConfig, PathConfigMap, NestedNavigateParams } from './types';\n\ntype ConfigItem = {\n  initialRouteName?: string;\n  screens?: Record<string, ConfigItem>;\n};\n\ntype Options = { initialRouteName?: string; screens: PathConfigMap };\n\ntype NavigateAction<State extends NavigationState> = {\n  type: 'NAVIGATE';\n  payload: {\n    name: string;\n    params?: NestedNavigateParams<State>;\n  };\n};\n\nexport default function getActionFromState(\n  state: PartialState<NavigationState>,\n  options?: Options\n): NavigateAction<NavigationState> | undefined {\n  // Create a normalized configs object which will be easier to use\n  const normalizedConfig = options ? createNormalizedConfigItem(options) : {};\n\n  let payload;\n  let current: PartialState<NavigationState> | undefined = state;\n  let config: ConfigItem | undefined = normalizedConfig;\n  let params: NestedNavigateParams<NavigationState> = {};\n\n  while (current) {\n    if (current.routes.length === 0) {\n      return undefined;\n    }\n\n    const route: Route<string> | PartialRoute<Route<string>> =\n      current.routes[current.routes.length - 1];\n\n    if (current.routes.length === 1) {\n      params.initial = true;\n      params.screen = route.name;\n      params.state = undefined; // Explicitly set to override existing value when merging params\n    } else if (\n      current.routes.length === 2 &&\n      current.routes[0].key === undefined &&\n      current.routes[0].name === config?.initialRouteName\n    ) {\n      params.initial = false;\n      params.screen = route.name;\n      params.state = undefined;\n    } else {\n      params.initial = undefined;\n      params.screen = undefined;\n      params.params = undefined;\n      params.state = current;\n      break;\n    }\n\n    if (route.state) {\n      params.params = { ...route.params };\n      params = params.params;\n    } else {\n      params.params = route.params;\n    }\n\n    current = route.state;\n    config = config?.screens?.[route.name];\n\n    if (!payload) {\n      payload = {\n        name: route.name,\n        params,\n      };\n    }\n  }\n\n  if (!payload) {\n    return;\n  }\n\n  // Try to construct payload for a `NAVIGATE` action from the state\n  // This lets us preserve the navigation state and not lose it\n  return {\n    type: 'NAVIGATE',\n    payload,\n  };\n}\n\nconst createNormalizedConfigItem = (config: PathConfig | string) =>\n  typeof config === 'object' && config != null\n    ? {\n        initialRouteName: config.initialRouteName,\n        screens:\n          config.screens != null\n            ? createNormalizedConfigs(config.screens)\n            : undefined,\n      }\n    : {};\n\nconst createNormalizedConfigs = (options: PathConfigMap) =>\n  Object.entries(options).reduce<Record<string, ConfigItem>>((acc, [k, v]) => {\n    acc[k] = createNormalizedConfigItem(v);\n    return acc;\n  }, {});\n"]},"metadata":{},"sourceType":"module"}