{"ast":null,"code":"import React from'react';import{createStackNavigator}from'@react-navigation/stack';import{AppBar}from\"/Users/joel/Projects/crypto/genericv2/src/index\";import ExamplesScreen from\"./ExamplesScreen\";import examples from\"./examples\";var flattenedExamples=examples.map(function(section){return section.items;}).flat();var Stack=createStackNavigator();var MainNavigation=function MainNavigation(props){return React.createElement(React.Fragment,null,React.createElement(Stack.Navigator,{headerMode:\"screen\",screenOptions:{header:function header(_ref){var navigation=_ref.navigation,scene=_ref.scene,previous=_ref.previous;return scene.descriptor.options.title!=='Examples'&&React.createElement(AppBar,null,previous&&React.createElement(AppBar.BackAction,{onPress:function onPress(){return navigation.goBack();}}),React.createElement(AppBar.Content,{title:scene.descriptor.options.title}));}}},React.createElement(Stack.Screen,{name:\"Home\",options:{title:'Examples'}},function(){return React.createElement(ExamplesScreen,props);}),flattenedExamples.map(function(_ref2){var name=_ref2.name,title=_ref2.title,component=_ref2.component;return React.createElement(Stack.Screen,{key:name,name:name,component:component,options:{title:title}});})));};export default MainNavigation;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/MainNavigation.tsx"],"names":["React","createStackNavigator","AppBar","ExamplesScreen","examples","flattenedExamples","map","section","items","flat","Stack","MainNavigation","props","header","navigation","scene","previous","descriptor","options","title","goBack","name","component"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,oBAAT,KAAqC,yBAArC,CACA,OAASC,MAAT,uDAEA,MAAOC,CAAAA,cAAP,wBACA,MAAOC,CAAAA,QAAP,kBAEA,GAAMC,CAAAA,iBAAiB,CAAGD,QAAQ,CAACE,GAAT,CAAa,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,KAAZ,EAApB,EAAuCC,IAAvC,EAA1B,CAEA,GAAMC,CAAAA,KAAK,CAAGT,oBAAoB,EAAlC,CAMA,GAAMU,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAkB,CACvC,MACE,yCACE,oBAAC,KAAD,CAAO,SAAP,EACE,UAAU,CAAC,QADb,CAEE,aAAa,CAAE,CACbC,MAAM,CAAE,yBAAGC,CAAAA,UAAH,MAAGA,UAAH,CAAeC,KAAf,MAAeA,KAAf,CAAsBC,QAAtB,MAAsBA,QAAtB,OACND,CAAAA,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,KAAzB,GAAmC,UAAnC,EACE,oBAAC,MAAD,MACGH,QAAQ,EACP,oBAAC,MAAD,CAAQ,UAAR,EAAmB,OAAO,CAAE,yBAAMF,CAAAA,UAAU,CAACM,MAAX,EAAN,EAA5B,EAFJ,CAIE,oBAAC,MAAD,CAAQ,OAAR,EAAgB,KAAK,CAAEL,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,KAAhD,EAJF,CAFI,EADK,CAFjB,EAcE,oBAAC,KAAD,CAAO,MAAP,EAAc,IAAI,CAAC,MAAnB,CAA0B,OAAO,CAAE,CAAEA,KAAK,CAAE,UAAT,CAAnC,EACG,iBAAM,qBAAC,cAAD,CAAoBP,KAApB,CAAN,EADH,CAdF,CAiBGP,iBAAiB,CAACC,GAAlB,CAAsB,mBAAGe,CAAAA,IAAH,OAAGA,IAAH,CAASF,KAAT,OAASA,KAAT,CAAgBG,SAAhB,OAAgBA,SAAhB,OACrB,qBAAC,KAAD,CAAO,MAAP,EACE,GAAG,CAAED,IADP,CAEE,IAAI,CAAEA,IAFR,CAGE,SAAS,CAAEC,SAHb,CAIE,OAAO,CAAE,CAAEH,KAAK,CAALA,KAAF,CAJX,EADqB,EAAtB,CAjBH,CADF,CADF,CA8BD,CA/BD,CAiCA,cAAeR,CAAAA,cAAf","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { AppBar } from 'react95-native';\nimport type { Theme } from 'react95-native';\nimport ExamplesScreen from './ExamplesScreen';\nimport examples from './examples';\n\nconst flattenedExamples = examples.map(section => section.items).flat();\n\nconst Stack = createStackNavigator();\n\ntype Props = {\n  setTheme: (theme: Theme) => void;\n};\n\nconst MainNavigation = (props: Props) => {\n  return (\n    <>\n      <Stack.Navigator\n        headerMode='screen'\n        screenOptions={{\n          header: ({ navigation, scene, previous }) =>\n            scene.descriptor.options.title !== 'Examples' && (\n              <AppBar>\n                {previous && (\n                  <AppBar.BackAction onPress={() => navigation.goBack()} />\n                )}\n                <AppBar.Content title={scene.descriptor.options.title} />\n              </AppBar>\n            ),\n        }}\n      >\n        <Stack.Screen name='Home' options={{ title: 'Examples' }}>\n          {() => <ExamplesScreen {...props} />}\n        </Stack.Screen>\n        {flattenedExamples.map(({ name, title, component }) => (\n          <Stack.Screen\n            key={name}\n            name={name}\n            component={component}\n            options={{ title }}\n          />\n        ))}\n      </Stack.Navigator>\n    </>\n  );\n};\n\nexport default MainNavigation;\n"]},"metadata":{},"sourceType":"module"}