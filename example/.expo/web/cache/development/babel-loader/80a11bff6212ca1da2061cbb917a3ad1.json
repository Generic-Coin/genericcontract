{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/NumberInputExample.tsx\";\n\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NumberInput, Fieldset, Panel } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport ExamplePanel from \"../util/ExamplePanel\";\n\nvar NumberInputExample = function NumberInputExample() {\n  var _useState = useState(20),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var handleChange = function handleChange(newValue) {\n    return setValue(newValue);\n  };\n\n  return React.createElement(ExamplePanel, {\n    variant: \"clear\",\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, React.createElement(Fieldset, {\n    label: \"Default\",\n    style: [styles.fieldset],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, React.createElement(NumberInput, {\n    value: value,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }), React.createElement(NumberInput, {\n    disabled: true,\n    value: 20,\n    style: [{\n      marginTop: 20\n    }],\n    inputWidth: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"Uncontrolled\",\n    style: [styles.fieldset],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, React.createElement(NumberInput, {\n    min: 0,\n    max: 3,\n    defaultValue: 1.5,\n    step: 0.3,\n    inputWidth: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })), React.createElement(Panel, {\n    variant: \"cutout\",\n    background: \"canvas\",\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Fieldset, {\n    variant: \"flat\",\n    label: \"Flat\",\n    style: [styles.fieldset],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(NumberInput, {\n    variant: \"flat\",\n    min: 0,\n    max: 3,\n    defaultValue: 1.5,\n    step: 0.3,\n    inputWidth: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), React.createElement(NumberInput, {\n    variant: \"flat\",\n    disabled: true,\n    value: 20,\n    style: [{\n      marginTop: 20\n    }],\n    inputWidth: 80,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  fieldset: {\n    padding: 20\n  }\n});\nexport default NumberInputExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/NumberInputExample.tsx"],"names":["React","useState","NumberInput","Fieldset","Panel","ExamplePanel","NumberInputExample","value","setValue","handleChange","newValue","styles","container","fieldset","marginTop","padding","StyleSheet","create","flex"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NumberInput, Fieldset, Panel } from 'react95-native';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst NumberInputExample = () => {\n  const [value, setValue] = useState(20);\n\n  const handleChange = (newValue: number) => setValue(newValue);\n  return (\n    <ExamplePanel variant='clear' style={styles.container}>\n      <Fieldset label='Default' style={[styles.fieldset]}>\n        <NumberInput value={value} onChange={handleChange} />\n        <NumberInput\n          disabled\n          value={20}\n          style={[{ marginTop: 20 }]}\n          inputWidth={80}\n        />\n      </Fieldset>\n      <Fieldset label='Uncontrolled' style={[styles.fieldset]}>\n        <NumberInput\n          min={0}\n          max={3}\n          defaultValue={1.5}\n          step={0.3}\n          inputWidth={80}\n        />\n      </Fieldset>\n\n      <Panel variant='cutout' background='canvas' style={{ padding: 20 }}>\n        <Fieldset variant='flat' label='Flat' style={[styles.fieldset]}>\n          <NumberInput\n            variant='flat'\n            min={0}\n            max={3}\n            defaultValue={1.5}\n            step={0.3}\n            inputWidth={80}\n          />\n          <NumberInput\n            variant='flat'\n            disabled\n            value={20}\n            style={[{ marginTop: 20 }]}\n            inputWidth={80}\n          />\n        </Fieldset>\n      </Panel>\n    </ExamplePanel>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  fieldset: {\n    padding: 20,\n  },\n});\n\nexport default NumberInputExample;\n"]},"metadata":{},"sourceType":"module"}