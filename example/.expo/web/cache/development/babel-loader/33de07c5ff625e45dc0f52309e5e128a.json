{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericcoin/example/src/App.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { StatusBar } from 'expo-status-bar';\nimport { fontNames, Provider, themes } from \"/Users/joel/Projects/crypto/genericcoin/src/index\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport MainNavigation from \"./MainNavigation\";\nimport { NotificationProvider } from \"./util/notifications\";\n\nvar App = function App() {\n  var _useFonts3;\n\n  var _useState = useState(themes.original),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  var _useFonts = useFonts((_useFonts3 = {}, _defineProperty(_useFonts3, fontNames.normal, require(\"./assets/fonts/MS-Sans-Serif.ttf\")), _defineProperty(_useFonts3, fontNames.bold, require(\"./assets/fonts/MS-Sans-Serif-Bold.ttf\")), _useFonts3)),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontLoaded = _useFonts2[0];\n\n  useEffect(function () {\n    if (fontLoaded) {\n      SplashScreen.hideAsync();\n      return;\n    }\n\n    SplashScreen.preventAutoHideAsync();\n  }, [fontLoaded]);\n\n  if (!fontLoaded) {\n    return React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n    style: \"light\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: {\n      backgroundColor: '#387d80'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(Provider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(MainNavigation, {\n    setTheme: setTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })), React.createElement(NotificationProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericcoin/example/src/App.tsx"],"names":["React","useEffect","useState","NavigationContainer","useFonts","StatusBar","fontNames","Provider","themes","SplashScreen","MainNavigation","NotificationProvider","App","original","theme","setTheme","normal","require","bold","fontLoaded","hideAsync","preventAutoHideAsync","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AAEA,OAAOC,cAAP;AACA,SAASC,oBAAT;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA;;AAAA,kBACUV,QAAQ,CAACM,MAAM,CAACK,QAAR,CADlB;AAAA;AAAA,MACTC,KADS;AAAA,MACFC,QADE;;AAAA,kBAGKX,QAAQ,+CAC1BE,SAAS,CAACU,MADgB,EACPC,OAAO,oCADA,+BAE1BX,SAAS,CAACY,IAFgB,EAETD,OAAO,yCAFE,eAHb;AAAA;AAAA,MAGTE,UAHS;;AAQhBlB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkB,UAAJ,EAAgB;AACdV,MAAAA,YAAY,CAACW,SAAb;AACA;AACD;;AAEDX,IAAAA,YAAY,CAACY,oBAAb;AACD,GAPQ,EAON,CAACF,UAAD,CAPM,CAAT;;AASA,MAAI,CAACA,UAAL,EAAiB;AAEf,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,0CACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,QAAQ,EAAEC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAFF,CADF;AAaD,CAnCD;;AAqCA,eAAeH,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { StatusBar } from 'expo-status-bar';\nimport { fontNames, Provider, themes } from 'react95-native';\nimport * as SplashScreen from 'expo-splash-screen';\n\nimport MainNavigation from './MainNavigation';\nimport { NotificationProvider } from './util/notifications';\n\nconst App = () => {\n  const [theme, setTheme] = useState(themes.original);\n\n  const [fontLoaded] = useFonts({\n    [fontNames.normal]: require('./assets/fonts/MS-Sans-Serif.ttf'),\n    [fontNames.bold]: require('./assets/fonts/MS-Sans-Serif-Bold.ttf'),\n  });\n\n  useEffect(() => {\n    if (fontLoaded) {\n      SplashScreen.hideAsync();\n      return;\n    }\n\n    SplashScreen.preventAutoHideAsync();\n  }, [fontLoaded]);\n\n  if (!fontLoaded) {\n    /* Renders an empty view to avoid errors while the splash screen is visible */\n    return <View />;\n  }\n\n  return (\n    <>\n      <StatusBar style='light' />\n      <View style={{ backgroundColor: '#387d80' }}>\n        <Provider theme={theme}>\n          <NavigationContainer>\n            <MainNavigation setTheme={setTheme} />\n          </NavigationContainer>\n          <NotificationProvider />\n        </Provider>\n      </View>\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}