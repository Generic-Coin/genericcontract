{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/MainNavigation.tsx\";\n\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { AppBar } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport ExamplesScreen from \"./ExamplesScreen\";\nvar Stack = createStackNavigator();\n\nvar MainNavigation = function MainNavigation(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, {\n    headerMode: \"screen\",\n    screenOptions: {\n      header: function header(_ref) {\n        _objectDestructuringEmpty(_ref);\n\n        return scene.descriptor.options.title !== 'Examples' && React.createElement(AppBar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 15\n          }\n        }, previous && React.createElement(AppBar.BackAction, {\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }\n        }), React.createElement(AppBar.Content, {\n          title: scene.descriptor.options.title,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    options: {\n      title: 'Generic Coin'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, function () {\n    return React.createElement(ExamplesScreen, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }\n    }));\n  })));\n};\n\nexport default MainNavigation;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/MainNavigation.tsx"],"names":["React","createStackNavigator","AppBar","ExamplesScreen","Stack","MainNavigation","props","header","scene","descriptor","options","title","previous","navigation","goBack"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,MAAT;AAEA,OAAOC,cAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;AAMA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAkB;AACvC,SACE,0CACE,oBAAC,KAAD,CAAO,SAAP;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,aAAa,EAAE;AACbC,MAAAA,MAAM,EAAE;AAAA;;AAAA,eACNC,KAAK,CAACC,UAAN,CAAiBC,OAAjB,CAAyBC,KAAzB,KAAmC,UAAnC,IACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,QAAQ,IACP,oBAAC,MAAD,CAAQ,UAAR;AAAmB,UAAA,OAAO,EAAE;AAAA,mBAAMC,UAAU,CAACC,MAAX,EAAN;AAAA,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAIE,oBAAC,MAAD,CAAQ,OAAR;AAAgB,UAAA,KAAK,EAAEN,KAAK,CAACC,UAAN,CAAiBC,OAAjB,CAAyBC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CAFI;AAAA;AADK,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,OAAO,EAAE;AAAEA,MAAAA,KAAK,EAAE;AAAT,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,WAAM,oBAAC,cAAD,eAAoBL,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;AAAA,GADH,CAdF,CADF,CADF;AAsBD,CAvBD;;AAyBA,eAAeD,cAAf","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { AppBar } from 'react95-native';\nimport type { Theme } from 'react95-native';\nimport ExamplesScreen from './ExamplesScreen';\n\nconst Stack = createStackNavigator();\n\ntype Props = {\n  setTheme: (theme: Theme) => void;\n};\n\nconst MainNavigation = (props: Props) => {\n  return (\n    <>\n      <Stack.Navigator\n        headerMode='screen'\n        screenOptions={{\n          header: ({  }) =>\n            scene.descriptor.options.title !== 'Examples' && (\n              <AppBar>\n                {previous && (\n                  <AppBar.BackAction onPress={() => navigation.goBack()} />\n                )}\n                <AppBar.Content title={scene.descriptor.options.title} />\n              </AppBar>\n            ),\n        }}\n      >\n        <Stack.Screen name='Home' options={{ title: 'Generic Coin' }}>\n          {() => <ExamplesScreen {...props} />}\n        </Stack.Screen>\n      </Stack.Navigator>\n    </>\n  );\n};\n\nexport default MainNavigation;\n"]},"metadata":{},"sourceType":"module"}