{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/CheckboxExample.tsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Checkbox, Fieldset, Panel } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport ExamplePanel from \"../util/ExamplePanel\";\n\nvar CheckboxExample = function CheckboxExample() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isChecked = _useState2[0],\n      setIsChecked = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCheckedFlat = _useState4[0],\n      setIsCheckedFlat = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isIndeterminate = _useState6[0],\n      setIsIndeterminate = _useState6[1];\n\n  return React.createElement(ExamplePanel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Fieldset, {\n    label: \"Default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Checkbox, {\n    status: isChecked ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setIsChecked(function (prevState) {\n        return !prevState;\n      });\n    },\n    label: \"Cheese\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), React.createElement(Checkbox, {\n    status: \"checked\",\n    label: \"Pineapple\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"Indeterminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, React.createElement(Checkbox, {\n    status: isIndeterminate ? 'indeterminate' : 'unchecked',\n    onPress: function onPress() {\n      return setIsIndeterminate(function (prevState) {\n        return !prevState;\n      });\n    },\n    label: \"Cheese\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), React.createElement(Checkbox, {\n    status: \"indeterminate\",\n    label: \"Pineapple\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  })), React.createElement(Panel, {\n    variant: \"cutout\",\n    background: \"canvas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Fieldset, {\n    variant: \"flat\",\n    label: \"Default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Checkbox, {\n    variant: \"flat\",\n    status: isCheckedFlat ? 'checked' : 'unchecked',\n    onPress: function onPress() {\n      return setIsCheckedFlat(function (prevState) {\n        return !prevState;\n      });\n    },\n    label: \"Cheese\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), React.createElement(Checkbox, {\n    variant: \"flat\",\n    status: \"checked\",\n    label: \"Pineapple\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  })), React.createElement(Fieldset, {\n    variant: \"flat\",\n    label: \"Indeterminate\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, React.createElement(Checkbox, {\n    variant: \"flat\",\n    status: isIndeterminate ? 'indeterminate' : 'unchecked',\n    onPress: function onPress() {\n      return setIsIndeterminate(function (prevState) {\n        return !prevState;\n      });\n    },\n    label: \"Cheese\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(Checkbox, {\n    variant: \"flat\",\n    status: \"indeterminate\",\n    label: \"Pineapple\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default CheckboxExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/CheckboxExample.tsx"],"names":["React","useState","Checkbox","Fieldset","Panel","ExamplePanel","CheckboxExample","isChecked","setIsChecked","isCheckedFlat","setIsCheckedFlat","isIndeterminate","setIsIndeterminate","prevState","padding"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React, { useState } from 'react';\nimport { View } from 'react-native';\nimport { Checkbox, Fieldset, Panel } from 'react95-native';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst CheckboxExample = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  const [isCheckedFlat, setIsCheckedFlat] = useState(true);\n\n  const [isIndeterminate, setIsIndeterminate] = useState(true);\n\n  return (\n    <ExamplePanel>\n      <Fieldset label='Default'>\n        <Checkbox\n          status={isChecked ? 'checked' : 'unchecked'}\n          onPress={() => setIsChecked(prevState => !prevState)}\n          label='Cheese'\n        />\n        <Checkbox status='checked' label='Pineapple' disabled />\n      </Fieldset>\n      <Fieldset label='Indeterminate'>\n        <Checkbox\n          status={isIndeterminate ? 'indeterminate' : 'unchecked'}\n          onPress={() => setIsIndeterminate(prevState => !prevState)}\n          label='Cheese'\n        />\n        <Checkbox status='indeterminate' label='Pineapple' disabled />\n      </Fieldset>\n      <Panel variant='cutout' background='canvas'>\n        <View style={{ padding: 20 }}>\n          <Fieldset variant='flat' label='Default'>\n            <Checkbox\n              variant='flat'\n              status={isCheckedFlat ? 'checked' : 'unchecked'}\n              onPress={() => setIsCheckedFlat(prevState => !prevState)}\n              label='Cheese'\n            />\n            <Checkbox\n              variant='flat'\n              status='checked'\n              label='Pineapple'\n              disabled\n            />\n          </Fieldset>\n          <Fieldset variant='flat' label='Indeterminate'>\n            <Checkbox\n              variant='flat'\n              status={isIndeterminate ? 'indeterminate' : 'unchecked'}\n              onPress={() => setIsIndeterminate(prevState => !prevState)}\n              label='Cheese'\n            />\n            <Checkbox\n              variant='flat'\n              status='indeterminate'\n              label='Pineapple'\n              disabled\n            />\n          </Fieldset>\n        </View>\n      </Panel>\n    </ExamplePanel>\n  );\n};\n\nexport default CheckboxExample;\n"]},"metadata":{},"sourceType":"module"}