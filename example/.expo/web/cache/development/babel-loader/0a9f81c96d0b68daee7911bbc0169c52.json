{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/WindowExample.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Window, Text } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport { notificationService } from \"../util/notifications\";\n\nvar onClose = function onClose() {\n  return notificationService.send({\n    message: 'onClose'\n  });\n};\n\nvar onMinimize = function onMinimize() {\n  return notificationService.send({\n    message: 'onMinimize'\n  });\n};\n\nvar onMaximize = function onMaximize() {\n  return notificationService.send({\n    message: 'onMaximize'\n  });\n};\n\nvar AppBarExample = function AppBarExample() {\n  return React.createElement(View, {\n    style: {\n      backgroundColor: 'teal',\n      flex: 1,\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, React.createElement(Window, {\n    title: \"Window.exe\",\n    onClose: onClose,\n    onMinimize: onMinimize,\n    onMaximize: onMaximize,\n    style: styles.window,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.windowContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"This is a Window\"))), React.createElement(Window, {\n    title: \"Not active.exe\",\n    active: false,\n    onClose: onClose,\n    onMinimize: onMinimize,\n    onMaximize: onMaximize,\n    style: [styles.window, {\n      marginTop: 16\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.windowContent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"This window is inactive\"))));\n};\n\nexport default AppBarExample;\nvar styles = StyleSheet.create({\n  window: {\n    width: '100%',\n    height: 120\n  },\n  windowContent: {\n    padding: 8\n  }\n});","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/WindowExample.tsx"],"names":["React","Window","Text","notificationService","onClose","send","message","onMinimize","onMaximize","AppBarExample","backgroundColor","flex","padding","styles","window","windowContent","marginTop","StyleSheet","create","width","height"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,MAAT,EAAiBC,IAAjB;AACA,SAASC,mBAAT;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU;AAAA,SAAMD,mBAAmB,CAACE,IAApB,CAAyB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzB,CAAN;AAAA,CAAhB;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAMJ,mBAAmB,CAACE,IAApB,CAAyB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzB,CAAN;AAAA,CAAnB;;AACA,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAML,mBAAmB,CAACE,IAApB,CAAyB;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzB,CAAN;AAAA,CAAnB;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE,MAAnB;AAA2BC,MAAAA,IAAI,EAAE,CAAjC;AAAoCC,MAAAA,OAAO,EAAE;AAA7C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,OAAO,EAAER,OAFX;AAGE,IAAA,UAAU,EAAEG,UAHd;AAIE,IAAA,UAAU,EAAEC,UAJd;AAKE,IAAA,KAAK,EAAEK,MAAM,CAACC,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CAPF,CADF,EAaE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,MAAM,EAAE,KAFV;AAGE,IAAA,OAAO,EAAEX,OAHX;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,UAAU,EAAEC,UALd;AAME,IAAA,KAAK,EAAE,CACLK,MAAM,CAACC,MADF,EAEL;AACEE,MAAAA,SAAS,EAAE;AADb,KAFK,CANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CAfF,CAbF,CADF;AAmCD,CApCD;;AAsCA,eAAeN,aAAf;AAEA,IAAMI,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,MAAM,EAAE;AACNK,IAAAA,KAAK,EAAE,MADD;AAENC,IAAAA,MAAM,EAAE;AAFF,GADuB;AAK/BL,EAAAA,aAAa,EAAE;AACbH,IAAAA,OAAO,EAAE;AADI;AALgB,CAAlB,CAAf","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { Window, Text } from 'react95-native';\nimport { notificationService } from '../util/notifications';\n\nconst onClose = () => notificationService.send({ message: 'onClose' });\nconst onMinimize = () => notificationService.send({ message: 'onMinimize' });\nconst onMaximize = () => notificationService.send({ message: 'onMaximize' });\n\nconst AppBarExample = () => {\n  return (\n    <View style={{ backgroundColor: 'teal', flex: 1, padding: 16 }}>\n      <Window\n        title='Window.exe'\n        onClose={onClose}\n        onMinimize={onMinimize}\n        onMaximize={onMaximize}\n        style={styles.window}\n      >\n        <View style={styles.windowContent}>\n          <Text>This is a Window</Text>\n        </View>\n      </Window>\n\n      <Window\n        title='Not active.exe'\n        active={false}\n        onClose={onClose}\n        onMinimize={onMinimize}\n        onMaximize={onMaximize}\n        style={[\n          styles.window,\n          {\n            marginTop: 16,\n            // TODO: truncate title text with ellipsis on small widths\n            // width: 200\n          },\n        ]}\n      >\n        <View style={styles.windowContent}>\n          <Text>This window is inactive</Text>\n        </View>\n      </Window>\n    </View>\n  );\n};\n\nexport default AppBarExample;\n\nconst styles = StyleSheet.create({\n  window: {\n    width: '100%',\n    height: 120,\n  },\n  windowContent: {\n    padding: 8,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}