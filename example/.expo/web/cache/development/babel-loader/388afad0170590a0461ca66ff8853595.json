{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/SliderExample.tsx\";\n\nimport React from 'react';\nimport { Slider, Fieldset } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport * as Haptics from 'expo-haptics';\nimport { notificationService } from \"../util/notifications\";\nimport ExamplePanel from \"../util/ExamplePanel\";\nvar restrictedValues = [0, 20, 80, 100].map(function (n) {\n  return {\n    label: n.toString() + \"\\xB0C\",\n    value: n\n  };\n});\n\nvar hapticFeedback = function hapticFeedback() {\n  return Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n};\n\nvar DividerExample = function DividerExample() {\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      withTicksValue = _React$useState4[0],\n      setWithTicksValue = _React$useState4[1];\n\n  var _React$useState5 = React.useState(restrictedValues[0].value),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      restrictedValue = _React$useState6[0],\n      setRestrictedValue = _React$useState6[1];\n\n  var handleChange = function handleChange(newValue) {\n    hapticFeedback();\n    setValue(newValue);\n  };\n\n  var handleWithTicksValueChange = function handleWithTicksValueChange(newValue) {\n    hapticFeedback();\n    setWithTicksValue(newValue);\n  };\n\n  var handleRestrictedValueChange = function handleRestrictedValueChange(newValue) {\n    hapticFeedback();\n    setRestrictedValue(newValue);\n  };\n\n  var sendNotification = function sendNotification(val) {\n    notificationService.send({\n      message: \"Value selected: \" + val,\n      closeButtonLabel: 'OK!'\n    });\n  };\n\n  return React.createElement(ExamplePanel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(Fieldset, {\n    label: \"Default:\",\n    style: {\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    step: 2,\n    onChange: handleChange,\n    onChangeCommitted: sendNotification,\n    value: value,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"With ticks:\",\n    style: {\n      padding: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    onChange: handleWithTicksValueChange,\n    onChangeCommitted: sendNotification,\n    value: withTicksValue,\n    marks: true,\n    step: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"Restricted values:\",\n    style: {\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    onChange: handleRestrictedValueChange,\n    onChangeCommitted: sendNotification,\n    value: restrictedValue,\n    marks: restrictedValues,\n    step: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"Disabled:\",\n    style: {\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, React.createElement(Slider, {\n    disabled: true,\n    marks: restrictedValues,\n    step: null,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default DividerExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/SliderExample.tsx"],"names":["React","Slider","Fieldset","Haptics","notificationService","ExamplePanel","restrictedValues","map","n","label","toString","value","hapticFeedback","impactAsync","ImpactFeedbackStyle","Light","DividerExample","useState","setValue","withTicksValue","setWithTicksValue","restrictedValue","setRestrictedValue","handleChange","newValue","handleWithTicksValueChange","handleRestrictedValueChange","sendNotification","val","send","message","closeButtonLabel","padding"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Slider, Fieldset } from 'react95-native';\nimport * as Haptics from 'expo-haptics';\nimport { notificationService } from '../util/notifications';\n\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst restrictedValues = [0, 20, 80, 100].map(n => ({\n  label: `${n.toString()}Â°C`,\n  value: n,\n}));\n\nconst hapticFeedback = () =>\n  Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);\n\nconst DividerExample = () => {\n  const [value, setValue] = React.useState(0);\n  const [withTicksValue, setWithTicksValue] = React.useState(0);\n  const [restrictedValue, setRestrictedValue] = React.useState(\n    restrictedValues[0].value,\n  );\n\n  const handleChange = (newValue: number) => {\n    hapticFeedback();\n    setValue(newValue);\n  };\n\n  const handleWithTicksValueChange = (newValue: number) => {\n    hapticFeedback();\n    setWithTicksValue(newValue);\n  };\n\n  const handleRestrictedValueChange = (newValue: number) => {\n    hapticFeedback();\n    setRestrictedValue(newValue);\n  };\n\n  const sendNotification = (val: number) => {\n    notificationService.send({\n      message: `Value selected: ${val}`,\n      closeButtonLabel: 'OK!',\n    });\n  };\n\n  return (\n    <ExamplePanel>\n      <Fieldset label='Default:' style={{ padding: 16 }}>\n        <Slider\n          step={2}\n          onChange={handleChange}\n          onChangeCommitted={sendNotification}\n          value={value}\n        />\n      </Fieldset>\n\n      <Fieldset label='With ticks:' style={{ padding: 16 }}>\n        <Slider\n          onChange={handleWithTicksValueChange}\n          onChangeCommitted={sendNotification}\n          value={withTicksValue}\n          marks\n          step={10}\n        />\n      </Fieldset>\n\n      <Fieldset label='Restricted values:' style={{ padding: 24 }}>\n        <Slider\n          onChange={handleRestrictedValueChange}\n          onChangeCommitted={sendNotification}\n          value={restrictedValue}\n          marks={restrictedValues}\n          step={null}\n        />\n      </Fieldset>\n\n      <Fieldset label='Disabled:' style={{ padding: 24 }}>\n        <Slider disabled marks={restrictedValues} step={null} />\n      </Fieldset>\n    </ExamplePanel>\n  );\n};\n\nexport default DividerExample;\n"]},"metadata":{},"sourceType":"module"}