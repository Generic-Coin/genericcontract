{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/ColorPickerExample.tsx\";\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { ColorButton, Menu, ColorPicker, Divider, Button, Window, Text } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport Container from \"../util/Container\";\nimport ExamplePanel from \"../util/ExamplePanel\";\nvar colors = ['white', 'black', '#bdbebd', '#7a7d7b', '#ff0102', '#7c0000', '#feff00', '#7c7d04', '#00ff00', '#077d04', '#0afeff', '#067d7b', '#1402ff', '#05007b', '#ff01ff', '#7a037b', '#cdaeb4', '#9b5d6a', '#e5d6de', '#9c9d9d'];\n\nvar ColorPickerExample = function ColorPickerExample() {\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      colorMenuOpen = _React$useState2[0],\n      setColorMenuOpen = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colors[3]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      color = _React$useState4[0],\n      setColor = _React$useState4[1];\n\n  var handleColorChange = function handleColorChange(value) {\n    setColor(value);\n    setColorMenuOpen(false);\n  };\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      secondColorMenuOpen = _React$useState6[0],\n      setSecondColorMenuOpen = _React$useState6[1];\n\n  var _React$useState7 = React.useState(colors[6]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      secondColor = _React$useState8[0],\n      setSecondColor = _React$useState8[1];\n\n  var _React$useState9 = React.useState(secondColor),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      tempSecondColor = _React$useState10[0],\n      setTempSecondColor = _React$useState10[1];\n\n  var handleTempSecondColorChange = function handleTempSecondColorChange(value) {\n    setTempSecondColor(value);\n  };\n\n  var handleSecondColorApply = function handleSecondColorApply() {\n    setSecondColor(tempSecondColor);\n    setSecondColorMenuOpen(false);\n  };\n\n  var handleSecondColorCancel = function handleSecondColorCancel() {\n    setTempSecondColor(secondColor);\n    setSecondColorMenuOpen(false);\n  };\n\n  return React.createElement(ExamplePanel, {\n    variant: \"clear\",\n    disableScroll: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Container.Section, {\n    title: \"Default\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '100%',\n      flexDirection: 'row',\n      justifyContent: 'space-between'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Menu, {\n    open: colorMenuOpen,\n    anchor: React.createElement(ColorButton, {\n      onPress: function onPress() {\n        return setColorMenuOpen(function (state) {\n          return !state;\n        });\n      },\n      color: color,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, React.createElement(ColorPicker, {\n    onChange: handleColorChange,\n    value: color,\n    colors: colors,\n    colorsPerRow: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  })), React.createElement(Divider, {\n    style: {\n      marginVertical: 4\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    disabled: true,\n    style: {\n      margin: 2\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, \"Other...\")), React.createElement(ColorButton, {\n    onPress: function onPress() {\n      return setSecondColorMenuOpen(!secondColorMenuOpen);\n    },\n    color: secondColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }))), secondColorMenuOpen && React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    pointerEvents: \"box-none\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, React.createElement(Window, {\n    title: \"Colors\",\n    onClose: handleSecondColorCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    style: {\n      padding: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginVertical: 8,\n      fontSize: 16\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Basic colors:\"), React.createElement(ColorPicker, {\n    onChange: handleTempSecondColorChange,\n    value: tempSecondColor,\n    wide: true,\n    colors: colors,\n    colorsPerRow: 5,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      alignItems: 'flex-end',\n      marginTop: 8\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, React.createElement(Button, {\n    style: {\n      marginRight: 2,\n      flex: 1\n    },\n    onPress: handleSecondColorCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, \"Cancel\"), React.createElement(Button, {\n    style: {\n      flex: 1\n    },\n    onPress: handleSecondColorApply,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, \"Ok\"))))));\n};\n\nexport default ColorPickerExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/ColorPickerExample.tsx"],"names":["React","ColorButton","Menu","ColorPicker","Divider","Button","Window","Text","Container","ExamplePanel","colors","ColorPickerExample","useState","colorMenuOpen","setColorMenuOpen","color","setColor","handleColorChange","value","secondColorMenuOpen","setSecondColorMenuOpen","secondColor","setSecondColor","tempSecondColor","setTempSecondColor","handleTempSecondColorChange","handleSecondColorApply","handleSecondColorCancel","width","flexDirection","justifyContent","state","padding","marginVertical","margin","position","top","left","right","bottom","alignItems","fontSize","marginTop","marginRight","flex"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport { View } from 'react-native';\nimport {\n  ColorButton,\n  Menu,\n  ColorPicker,\n  Divider,\n  Button,\n  Window,\n  Text,\n} from 'react95-native';\n\nimport Container from '../util/Container';\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst colors = [\n  'white',\n  'black',\n  '#bdbebd',\n  '#7a7d7b',\n  '#ff0102',\n  '#7c0000',\n  '#feff00',\n  '#7c7d04',\n  '#00ff00',\n  '#077d04',\n  '#0afeff',\n  '#067d7b',\n  '#1402ff',\n  '#05007b',\n  '#ff01ff',\n  '#7a037b',\n  '#cdaeb4',\n  '#9b5d6a',\n  '#e5d6de',\n  '#9c9d9d',\n];\n\nconst ColorPickerExample = () => {\n  const [colorMenuOpen, setColorMenuOpen] = React.useState(true);\n  const [color, setColor] = React.useState(colors[3]);\n\n  const handleColorChange = (value: string) => {\n    setColor(value);\n    setColorMenuOpen(false);\n  };\n\n  const [secondColorMenuOpen, setSecondColorMenuOpen] = React.useState(false);\n  const [secondColor, setSecondColor] = React.useState(colors[6]);\n  const [tempSecondColor, setTempSecondColor] = React.useState(secondColor);\n\n  const handleTempSecondColorChange = (value: string) => {\n    setTempSecondColor(value);\n  };\n\n  const handleSecondColorApply = () => {\n    setSecondColor(tempSecondColor);\n    setSecondColorMenuOpen(false);\n  };\n  const handleSecondColorCancel = () => {\n    setTempSecondColor(secondColor);\n    setSecondColorMenuOpen(false);\n  };\n\n  return (\n    <ExamplePanel variant='clear' disableScroll>\n      <Container.Section title='Default'>\n        <View\n          style={{\n            width: '100%',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n          }}\n        >\n          <Menu\n            open={colorMenuOpen}\n            anchor={\n              <ColorButton\n                onPress={() => setColorMenuOpen(state => !state)}\n                color={color}\n              />\n            }\n          >\n            <View style={{ padding: 4 }}>\n              <ColorPicker\n                onChange={handleColorChange}\n                value={color}\n                colors={colors}\n                colorsPerRow={5}\n              />\n            </View>\n            <Divider style={{ marginVertical: 4 }} />\n            <Button\n              disabled\n              style={{\n                margin: 2,\n              }}\n            >\n              Other...\n            </Button>\n          </Menu>\n          <ColorButton\n            onPress={() => setSecondColorMenuOpen(!secondColorMenuOpen)}\n            color={secondColor}\n          />\n        </View>\n      </Container.Section>\n\n      {secondColorMenuOpen && (\n        <View\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n          pointerEvents='box-none'\n        >\n          <Window title='Colors' onClose={handleSecondColorCancel}>\n            <View style={{ padding: 8 }}>\n              <Text style={{ marginVertical: 8, fontSize: 16 }}>\n                Basic colors:\n              </Text>\n              <ColorPicker\n                onChange={handleTempSecondColorChange}\n                value={tempSecondColor}\n                wide\n                colors={colors}\n                colorsPerRow={5}\n              />\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'flex-end',\n                  marginTop: 8,\n                }}\n              >\n                <Button\n                  style={{\n                    marginRight: 2,\n                    flex: 1,\n                  }}\n                  onPress={handleSecondColorCancel}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  style={{\n                    flex: 1,\n                  }}\n                  onPress={handleSecondColorApply}\n                >\n                  Ok\n                </Button>\n              </View>\n            </View>\n          </Window>\n        </View>\n      )}\n    </ExamplePanel>\n  );\n};\n\nexport default ColorPickerExample;\n"]},"metadata":{},"sourceType":"module"}