{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/joel/Projects/crypto/genericv2/example/src/examples/SelectExample.tsx\";\n\nimport React, { useState } from 'react';\nimport { Select, Fieldset } from \"/Users/joel/Projects/crypto/genericv2/src/index\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ExamplePanel from \"../util/ExamplePanel\";\nvar options = ['apple', 'orange', 'banana', 'pear', 'watermelon'].map(function (o) {\n  return {\n    label: o,\n    value: o\n  };\n});\n\nvar SelectExample = function SelectExample() {\n  var _useState = useState(options[0].value),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return React.createElement(ExamplePanel, {\n    variant: \"clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, React.createElement(Fieldset, {\n    label: \"Disabled:\",\n    style: [{\n      padding: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, React.createElement(Select, {\n    disabled: true,\n    options: options,\n    value: value,\n    onChange: function onChange(newValue) {\n      return setValue(newValue);\n    },\n    style: [{\n      width: 150\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  })), React.createElement(Fieldset, {\n    label: \"Default:\",\n    style: [{\n      padding: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      zIndex: 999\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(Select, {\n    menuMaxHeight: 130,\n    options: options,\n    value: value,\n    onChange: function onChange(newValue) {\n      return setValue(newValue);\n    },\n    style: [{\n      width: 150\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default SelectExample;","map":{"version":3,"sources":["/Users/joel/Projects/crypto/genericv2/example/src/examples/SelectExample.tsx"],"names":["React","useState","Select","Fieldset","ExamplePanel","options","map","o","label","value","SelectExample","setValue","padding","newValue","width","zIndex"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB;;AAGA,OAAOC,YAAP;AAEA,IAAMC,OAAO,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,QAApB,EAA8B,MAA9B,EAAsC,YAAtC,EAAoDC,GAApD,CAAwD,UAAAC,CAAC;AAAA,SAAK;AAC5EC,IAAAA,KAAK,EAAED,CADqE;AAE5EE,IAAAA,KAAK,EAAEF;AAFqE,GAAL;AAAA,CAAzD,CAAhB;;AAKA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACAT,QAAQ,CAACI,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAZ,CADR;AAAA;AAAA,MACnBA,KADmB;AAAA,MACZE,QADY;;AAE1B,SACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAEP,OAFX;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAI,QAAQ;AAAA,aAAIF,QAAQ,CAACE,QAAD,CAAZ;AAAA,KAJpB;AAKE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAUE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAE,CAAC;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,OAAO,EAAEV,OAFX;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,QAAQ,EAAE,kBAAAI,QAAQ;AAAA,aAAIF,QAAQ,CAACE,QAAD,CAAZ;AAAA,KAJpB;AAKE,IAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAVF,CADF;AAyBD,CA3BD;;AA6BA,eAAeJ,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Select, Fieldset } from 'react95-native';\n\nimport { View } from 'react-native';\nimport ExamplePanel from '../util/ExamplePanel';\n\nconst options = ['apple', 'orange', 'banana', 'pear', 'watermelon'].map(o => ({\n  label: o,\n  value: o,\n}));\n\nconst SelectExample = () => {\n  const [value, setValue] = useState(options[0].value);\n  return (\n    <ExamplePanel variant='clear'>\n      <Fieldset label='Disabled:' style={[{ padding: 20 }]}>\n        <Select\n          disabled\n          options={options}\n          value={value}\n          onChange={newValue => setValue(newValue)}\n          style={[{ width: 150 }]}\n        />\n      </Fieldset>\n      <Fieldset label='Default:' style={[{ padding: 20 }]}>\n        {/* TODO: fix select dropdown zIndex issue */}\n        <View style={{ zIndex: 999 }}>\n          <Select\n            menuMaxHeight={130}\n            options={options}\n            value={value}\n            onChange={newValue => setValue(newValue)}\n            style={[{ width: 150 }]}\n          />\n        </View>\n      </Fieldset>\n    </ExamplePanel>\n  );\n};\n\nexport default SelectExample;\n"]},"metadata":{},"sourceType":"module"}